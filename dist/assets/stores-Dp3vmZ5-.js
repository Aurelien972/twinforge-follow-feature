const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/page-fridge-Cp-W9isk.js","assets/vendor-BefW7Bxj.js","assets/utils-CUtLAp28.js","assets/supabase-pyFrrmXL.js","assets/page-fridge-scan-C62RDC3k.js","assets/ui-components-lrK_WhZu.js","assets/motion-BQvLDPOm.js","assets/ui-components-DyoLTZgZ.css","assets/page-fridge-scan-DAz6gEg3.css","assets/date-utils-BlBdbPk_.js"])))=>i.map(i=>d[i]);
var Oe=Object.defineProperty;var De=(t,s,e)=>s in t?Oe(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var j=(t,s,e)=>De(t,typeof s!="symbol"?s+"":s,e);import{p as H,c as te,n as Q}from"./utils-CUtLAp28.js";import{l as a,s as m,p as pe}from"./page-fridge-Cp-W9isk.js";import{_ as A}from"./page-fridge-scan-C62RDC3k.js";import{d as O}from"./vendor-BefW7Bxj.js";const x=[{title:"Initialisation de la Forge Nutritionnelle",subtitle:"Préparation de votre plan personnalisé",message:"Analyse de votre profil nutritionnel...",duration:3e3,progressStart:0,progressEnd:15},{title:"Analyse des Préférences",subtitle:"Optimisation selon vos goûts",message:"Traitement de vos préférences alimentaires...",duration:2500,progressStart:15,progressEnd:30},{title:"Génération Intelligente",subtitle:"Création de recettes personnalisées",message:"Génération des repas avec IA...",duration:4e3,progressStart:30,progressEnd:60},{title:"Optimisation Nutritionnelle",subtitle:"Équilibrage des macronutriments",message:"Calcul des valeurs nutritionnelles...",duration:2e3,progressStart:60,progressEnd:80},{title:"Finalisation",subtitle:"Derniers ajustements",message:"Finalisation de votre plan hebdomadaire...",duration:1500,progressStart:80,progressEnd:95}],be="twinforge:meal-plan-store";function ye(t,s){let e;s?e=new Date(s):(e=new Date,e.setHours(0,0,0,0));const r=new Date(e);return r.setDate(e.getDate()+(t-1)*7),r.setHours(0,0,0,0),r}const Te=(t,s)=>({formatted:`${t.toLocaleDateString("fr-FR",{day:"numeric",month:"short"})} - ${s.toLocaleDateString("fr-FR",{day:"numeric",month:"short"})}`,startDate:t.toISOString(),endDate:s.toISOString()});function L(t,s=0){if(typeof t=="number"&&Number.isFinite(t))return t;if(typeof t=="string"){const e=t.match(/-?\d+(?:[.,]\d+)?/);return e?Number(e[0].replace(",",".")):s}return s}function $(t){console.log("🔍 [transformEdgeMealToFrontendMealDetail] Raw edgeMeal:",t);const s=(t?.mealName??t?.title??t?.meal??"Repas sans nom").toString(),e=(t?.descriptionSummary??t?.description??"").toString();!t?.mealName&&!t?.title&&!t?.meal&&console.warn("⚠️ [transformEdgeMealToFrontendMealDetail] Meal missing name fields:",t);const r=L(t?.prep_time_min??t?.prepTimeMin,0),n=L(t?.cook_time_min??t?.cookTimeMin,0),i=L(t?.calories_est??t?.estimatedCalories??t?.calories,0);console.log("🔍 [transformEdgeMealToFrontendMealDetail] Processed values:",{estimatedPrepTime:r,estimatedCookTime:n,estimatedCalories:i});const l=Array.isArray(t?.ingredients)?t.ingredients:Array.isArray(t?.mainIngredients)?t.mainIngredients:[],o=Array.isArray(t?.dietaryTags)?t.dietaryTags:[],c=Array.isArray(t?.mealComponents)?t.mealComponents:[];return{mealName:s,descriptionSummary:e,mainIngredients:l,estimatedPrepTime:r,estimatedCookTime:n,estimatedCalories:i,nutritionalOverview:{kcal:i,protein:L(t?.protein,0),carbs:L(t?.carbs,0),fat:L(t?.fat,0)},mealComponents:c,dietaryTags:o,recipeId:t?.recipeId,isDetailedRecipeGenerated:!1,detailedRecipe:void 0,status:"ready"}}function Ce(t){console.log("🔍 [transformEdgeDayToFrontendDay] Raw dayData:",t);const e=new Date(t.date).toLocaleDateString("fr-FR",{weekday:"long"}),r={};t.breakfast&&(r.breakfast=$(t.breakfast)),t.lunch&&(r.lunch=$(t.lunch)),t.dinner&&(r.dinner=$(t.dinner)),t.snack&&(r.snack=$(t.snack));const n=[r.breakfast,r.lunch,r.dinner,r.snack].filter(Boolean),i=n.reduce((c,u)=>c+L(u.estimatedPrepTime,0),0),l=n.reduce((c,u)=>c+L(u.estimatedCookTime,0),0),o=L(t.total_calories,n.reduce((c,u)=>c+L(u.estimatedCalories,0),0));return console.log("🔍 [transformEdgeDayToFrontendDay] Calculated totals:",{prepTime:i,cookTime:l,totalCalories:o}),{date:t.date,dayName:e.charAt(0).toUpperCase()+e.slice(1),meals:r,prepTime:i,cookTime:l,totalCalories:o,daily_summary:t.daily_summary,isBatchCookingDay:t.isBatchCookingDay||!1,status:"ready"}}const Re=(t,s)=>({startProgressSimulation:()=>{const e=s();e.progressIntervalId&&clearInterval(e.progressIntervalId),e.progressTimeoutId&&clearTimeout(e.progressTimeoutId);const r=Date.now();let n=0;const i=()=>{const c=Date.now(),u=s();if(c-u.lastBackendProgressUpdate<2e3&&u.lastBackendProgressUpdate>0)return;if(n>=x.length){t({generationProgress:95,currentLoadingTitle:"Finalisation",currentLoadingSubtitle:"Derniers ajustements",loadingMessage:"Finalisation de votre plan hebdomadaire..."});return}const p=x[n],g=r+x.slice(0,n).reduce((S,v)=>S+v.duration,0),d=c-g;if(d>=p.duration){if(n++,n<x.length){const S=x[n];t({simulatedStepIndex:n,generationProgress:S.progressStart,currentLoadingTitle:S.title,currentLoadingSubtitle:S.subtitle,loadingMessage:S.message})}}else{const S=d/p.duration,v=p.progressStart+(p.progressEnd-p.progressStart)*S;t({generationProgress:Math.min(v,p.progressEnd),currentLoadingTitle:p.title,currentLoadingSubtitle:p.subtitle,loadingMessage:p.message})}},l=x[0];t({simulatedStepIndex:0,simulatedProgressStartTime:r,lastBackendProgressUpdate:0,generationProgress:l.progressStart,currentLoadingTitle:l.title,currentLoadingSubtitle:l.subtitle,loadingMessage:l.message});const o=setInterval(i,100);t({progressIntervalId:o}),a.info("MEAL_PLAN_STORE","Progress simulation started",{stepsCount:x.length,timestamp:new Date().toISOString()})},stopProgressSimulation:()=>{const e=s();e.progressIntervalId&&clearInterval(e.progressIntervalId),e.progressTimeoutId&&clearTimeout(e.progressTimeoutId),t({progressIntervalId:null,progressTimeoutId:null,simulatedStepIndex:0,lastBackendProgressUpdate:0,simulatedProgressStartTime:0,simulatedProgressCurrentStepDuration:0,simulatedProgressCurrentStepStartValue:0,simulatedProgressCurrentStepEndValue:0}),a.info("MEAL_PLAN_STORE","Progress simulation stopped",{timestamp:new Date().toISOString()})}}),Ne=(t,s)=>({loadAvailableInventories:async()=>{try{const{data:{user:e}}=await m.auth.getUser();if(!e)return;a.info("MEAL_PLAN_STORE","Loading available inventories",{userId:e.id,timestamp:new Date().toISOString()});const{data:r,error:n}=await m.from("recipe_sessions").select("id, created_at, inventory_final, status").eq("user_id",e.id).not("inventory_final","is",null).order("created_at",{ascending:!1});if(a.debug("MEAL_PLAN_STORE","Raw Supabase response for recipe_sessions",{userId:e.id,data:r?r.map(c=>({id:c.id,created_at:c.created_at,inventory_final_length:c.inventory_final?.length,status:c.status})):null,error:n?.message,timestamp:new Date().toISOString()}),a.debug("MEAL_PLAN_STORE","Raw data from Supabase before filtering",{userId:e.id,totalSessions:r?.length||0,sessions:r?r.map(c=>({id:c.id,created_at:c.created_at,inventory_final_type:Array.isArray(c.inventory_final)?"array":typeof c.inventory_final,inventory_final_length:c.inventory_final?.length||0,status:c.status})):[],timestamp:new Date().toISOString()}),n)throw new Error(`Failed to load inventories: ${n.message}`);const i=(r||[]).filter(c=>c.inventory_final&&Array.isArray(c.inventory_final)&&c.inventory_final.length>0);a.debug("MEAL_PLAN_STORE","Filtered valid inventories",{userId:e.id,validInventoriesCount:i.length,validInventoriesIds:i.map(c=>c.id),timestamp:new Date().toISOString()}),a.debug("MEAL_PLAN_STORE","Valid inventories after filtering",{userId:e.id,validInventoriesCount:i.length,validInventories:i.map(c=>({id:c.id,created_at:c.created_at,inventory_final_length:c.inventory_final?.length||0,status:c.status})),timestamp:new Date().toISOString()}),t({availableInventories:i});const l=s().selectedInventoryId;i.length>0?l&&i.some(u=>u.id===l)?a.debug("MEAL_PLAN_STORE","Current selected inventory is valid",{userId:e.id,currentSelectedId:l,timestamp:new Date().toISOString()}):(a.info("MEAL_PLAN_STORE","No valid selected inventory found, defaulting to first available",{userId:e.id,currentSelectedId:l,defaultingTo:i[0].id,timestamp:new Date().toISOString()}),t({selectedInventoryId:i[0].id})):l!==null?(a.info("MEAL_PLAN_STORE","No inventories available, clearing selected inventory",{userId:e.id,currentSelectedId:l,timestamp:new Date().toISOString()}),t({selectedInventoryId:null})):a.debug("MEAL_PLAN_STORE","No inventories available and selected inventory already null",{userId:e.id,timestamp:new Date().toISOString()});const o=s().selectedInventoryId;i.length>0&&!o&&(a.info("MEAL_PLAN_STORE","Force selecting first available inventory",{userId:e.id,forcedSelectionId:i[0].id,timestamp:new Date().toISOString()}),t({selectedInventoryId:i[0].id})),a.info("MEAL_PLAN_STORE","Available inventories loaded",{inventoriesCount:i.length,selectedInventoryId:s().selectedInventoryId,timestamp:new Date().toISOString()})}catch(e){a.error("MEAL_PLAN_STORE","Failed to load available inventories",{error:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString()})}},selectInventory:e=>{t({selectedInventoryId:e}),a.info("MEAL_PLAN_STORE","Inventory selected",{inventoryId:e,timestamp:new Date().toISOString()})}});function Z(t){return new Blob([t]).size}function ee(){const t=[];let s=0;try{for(let i=0;i<localStorage.length;i++){const l=localStorage.key(i);if(l){const o=localStorage.getItem(l)||"",c=Z(l+o);t.push({key:l,size:c}),s+=c}}}catch(i){a.error("STORAGE_MANAGER","Failed to calculate storage stats",{error:i instanceof Error?i.message:String(i)})}t.sort((i,l)=>l.size-i.size);const e=10*1024*1024,r=e-s,n=s/e*100;return{used:s,available:Math.max(0,r),percentage:n,items:t}}function ge(t="STORAGE_USAGE"){const s=ee();a.info(t,"Storage usage",{usedMB:(s.used/(1024*1024)).toFixed(2),availableMB:(s.available/(1024*1024)).toFixed(2),percentage:s.percentage.toFixed(1),itemCount:s.items.length,largestItems:s.items.slice(0,5).map(e=>({key:e.key,sizeMB:(e.size/(1024*1024)).toFixed(2)}))})}function Le(){let t=0;try{const s=[];for(let e=0;e<localStorage.length;e++){const r=localStorage.key(e);if(r&&r.startsWith("REACT_QUERY_")){const n=localStorage.getItem(r)||"";t+=Z(r+n),s.push(r)}}s.forEach(e=>localStorage.removeItem(e)),a.info("STORAGE_CLEANUP","React Query cache cleaned",{keysRemoved:s.length,spaceFreesMB:(t/(1024*1024)).toFixed(2)})}catch(s){a.error("STORAGE_CLEANUP","Failed to clean React Query cache",{error:s instanceof Error?s.message:String(s)})}return t}function J(t,s=7){let e=0;try{const r=Date.now(),n=s*24*60*60*1e3,i=[];for(let l=0;l<localStorage.length;l++){const o=localStorage.key(l);if(o&&o.startsWith(t))try{const c=localStorage.getItem(o);if(c){const p=JSON.parse(c).state;p?.timestamp&&r-new Date(p.timestamp).getTime()>n&&(e+=Z(o+c),i.push(o))}}catch{a.warn("STORAGE_CLEANUP","Invalid JSON in localStorage, removing",{key:o});const u=localStorage.getItem(o)||"";e+=Z(o+u),i.push(o)}}i.forEach(l=>localStorage.removeItem(l)),i.length>0&&a.info("STORAGE_CLEANUP","Old store data cleaned",{storePrefix:t,keysRemoved:i.length,spaceFreesMB:(e/(1024*1024)).toFixed(2)})}catch(r){a.error("STORAGE_CLEANUP","Failed to clean old store data",{storePrefix:t,error:r instanceof Error?r.message:String(r)})}return e}function Me(){a.info("STORAGE_CLEANUP","Starting aggressive cleanup");const t=ee();let s=0;s+=Le(),s+=J("fastlift:chat:",7),s+=J("fastlift:coach-chat:",7),s+=J("fastlift:meal-plan:",7),s+=J("fastlift:fridge-scan:",7);const e=ee();return a.info("STORAGE_CLEANUP","Aggressive cleanup completed",{freedMB:(s/(1024*1024)).toFixed(2),usageBeforePercent:t.percentage.toFixed(1),usageAfterPercent:e.percentage.toFixed(1),improvement:(t.percentage-e.percentage).toFixed(1)}),s}async function ke(t,s="SAFE_STORAGE_OP"){try{return t()}catch(e){if(e instanceof Error&&(e.name==="QuotaExceededError"||e.message.includes("quota")||e.message.includes("QuotaExceededError"))){a.warn(s,"QuotaExceededError detected, attempting cleanup",{error:e.message});const r=Me();if(r>0){a.info(s,"Retrying operation after cleanup",{freedMB:(r/(1024*1024)).toFixed(2)});try{return t()}catch(n){throw a.error(s,"Operation failed even after cleanup",{error:n instanceof Error?n.message:String(n)}),n}}else throw a.error(s,"No space could be freed, operation failed",{error:e.message}),e}throw e}}function Fe(){const t=ee();t.percentage>90?a.error("STORAGE_MONITOR","Storage critically full",{percentage:t.percentage.toFixed(1),usedMB:(t.used/(1024*1024)).toFixed(2)}):t.percentage>75&&a.warn("STORAGE_MONITOR","Storage usage high",{percentage:t.percentage.toFixed(1),usedMB:(t.used/(1024*1024)).toFixed(2)})}function I(t){return typeof t=="string"&&t.trim()===""?null:t}function Ue(t){return t?{...t,displayName:I(t.displayName),phoneNumber:I(t.phoneNumber),sex:I(t.sex),activity_level:I(t.activity_level),job_category:I(t.job_category),objective:I(t.objective),birthdate:I(t.birthdate),portraitUrl:I(t.portraitUrl),avatarUrl:I(t.avatarUrl),portraitSource:I(t.portraitSource),avatarStatus:I(t.avatarStatus)}:null}const xe="fastlift:userstore:main",Ge=()=>({getItem:t=>{try{const s=localStorage.getItem(t);return s&&Fe(),s}catch(s){return a.error("STORAGE","Failed to read from localStorage",{key:t,error:s instanceof Error?s.message:String(s)}),null}},setItem:(t,s)=>ke(()=>{localStorage.setItem(t,s),a.debug("STORAGE","Successfully wrote to localStorage",{key:t,sizeMB:(new Blob([s]).size/(1024*1024)).toFixed(2)})},"USERSTORE_PERSIST"),removeItem:t=>{try{localStorage.removeItem(t)}catch(s){a.error("STORAGE","Failed to remove from localStorage",{key:t,error:s instanceof Error?s.message:String(s)})}}}),le=O()(H((t,s)=>({session:null,user:null,profile:null,loading:!1,saving:!1,initialized:!1,sessionReady:!1,sessionInfo:null,authReady:!1,setSession:e=>{t({session:e,user:e?.user||null,initialized:!0,authReady:!!e?.user,sessionInfo:e?.user?{userId:e.user.id,role:"user",email:e.user.email||void 0,displayName:e.user.user_metadata?.display_name||e.user.email?.split("@")[0]||void 0}:null}),a.debug("USER_STORE","Session updated",{hasSession:!!e,hasUser:!!e?.user,authReady:!!e?.user}),e?.user&&setTimeout(()=>{s().fetchProfile()},100)},setSessionReady:e=>{t({sessionReady:e})},setSessionInfo:e=>{t({sessionInfo:e})},setAuthReady:e=>{t({authReady:e})},setProfile:e=>{if(e===null){t({profile:null});return}t(r=>({profile:{...r.profile,...e,preferences:e.preferences?{...r.profile?.preferences,...e.preferences}:r.profile?.preferences,nutrition:e.nutrition?{...r.profile?.nutrition,...e.nutrition}:r.profile?.nutrition,householdDetails:e.householdDetails?{...r.profile?.householdDetails,...e.householdDetails}:r.profile?.householdDetails,mealPrepPreferences:e.mealPrepPreferences?{...r.profile?.mealPrepPreferences,...e.mealPrepPreferences}:r.profile?.mealPrepPreferences,kitchenEquipment:e.kitchenEquipment?{...r.profile?.kitchenEquipment,...e.kitchenEquipment}:r.profile?.kitchenEquipment,foodPreferences:e.foodPreferences?{...r.profile?.foodPreferences,...e.foodPreferences}:r.profile?.foodPreferences,sensoryPreferences:e.sensoryPreferences?{...r.profile?.sensoryPreferences,...e.sensoryPreferences}:r.profile?.sensoryPreferences,macroTargets:e.macroTargets?{...r.profile?.macroTargets,...e.macroTargets}:r.profile?.macroTargets,shoppingPreferences:e.shoppingPreferences?{...r.profile?.shoppingPreferences,...e.shoppingPreferences}:r.profile?.shoppingPreferences,fastingWindow:e.fastingWindow?{...r.profile?.fastingWindow,...e.fastingWindow}:r.profile?.fastingWindow}}))},fetchProfile:async()=>{const{session:e}=s();if(a.debug("USER_STORE","fetchProfile called",{hasSession:!!e,userId:e?.user?.id}),!!e?.user?.id){t({loading:!0});try{const{supabase:r}=await A(async()=>{const{supabase:o}=await import("./page-fridge-Cp-W9isk.js").then(c=>c.k);return{supabase:o}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]));a.info("USER_STORE_FETCH_PROFILE","Starting profile fetch from database",{userId:e.user.id,timestamp:new Date().toISOString(),philosophy:"profile_fetch_audit"});const{data:n,error:i}=await r.from("user_profile").select("*").eq("user_id",e.user.id).limit(1);a.info("USER_STORE_FETCH_PROFILE","Raw DB response received",{hasData:!!n,dataLength:n?.length||0,hasError:!!i,errorMessage:i?.message,rawProfileData:n&&n.length>0?{user_id:n[0].user_id,display_name:n[0].display_name,sex:n[0].sex,height_cm:n[0].height_cm,weight_kg:n[0].weight_kg,target_weight_kg:n[0].target_weight_kg,activity_level:n[0].activity_level,objective:n[0].objective,birthdate:n[0].birthdate,hasPreferences:!!n[0].preferences,preferencesKeys:n[0].preferences?Object.keys(n[0].preferences):[]}:null,philosophy:"raw_db_response_audit"}),n&&n.length>0&&n[0].preferences?.skin_tone&&a.info("USER_STORE_CRITICAL_AUDIT","AUDIT: Raw DB response contains skin_tone",{rawDbSkinTone:n[0].preferences.skin_tone,rawDbSkinToneType:typeof n[0].preferences.skin_tone,rawDbSkinToneKeys:n[0].preferences.skin_tone?Object.keys(n[0].preferences.skin_tone):[],rawDbSkinToneStringified:n[0].preferences.skin_tone?JSON.stringify(n[0].preferences.skin_tone):null,hasAllV2PropertiesInRawDb:!!(n[0].preferences.skin_tone?.rgb&&n[0].preferences.skin_tone?.hex&&n[0].preferences.skin_tone?.srgb_f32&&n[0].preferences.skin_tone?.linear_f32&&n[0].preferences.skin_tone?.schema),v2PropertiesIntegrityInRawDb:n[0].preferences.skin_tone?{rgb:n[0].preferences.skin_tone.rgb,hex:n[0].preferences.skin_tone.hex,srgb_f32:n[0].preferences.skin_tone.srgb_f32,linear_f32:n[0].preferences.skin_tone.linear_f32,schema:n[0].preferences.skin_tone.schema,source:n[0].preferences.skin_tone.source,confidence:n[0].preferences.skin_tone.confidence}:null,philosophy:"raw_db_response_skin_tone_audit"});const l=n&&n.length>0?n[0]:null;if(i||!l){a.info("USER_STORE_FETCH_PROFILE","No existing profile found, creating new profile",{userId:e.user.id,hasError:!!i,errorMessage:i?.message,philosophy:"new_profile_creation"});const o={user_id:e.user.id,display_name:e.user.user_metadata?.display_name||e.user.email?.split("@")[0]||null,sex:null,height_cm:null,weight_kg:null,target_weight_kg:null,activity_level:null,objective:null,avatar_status:"none",preferences:{onboardingCompleted:!1,onboardingSkipped:!1,profileCompletion:.1,authProvider:"email"},nutrition:{allergies:[],intolerances:[]},health:{},emotions:{}};try{const{data:c,error:u}=await r.from("user_profile").upsert(o,{onConflict:"user_id",ignoreDuplicates:!1}).select().single();if(u)a.error("USER_STORE_FETCH_PROFILE","Failed to create new profile in DB",{userId:e.user.id,createError:u.message,philosophy:"new_profile_creation_db_error"}),t({profile:{userId:e.user.id,id:e.user.id,displayName:e.user.user_metadata?.display_name||e.user.email?.split("@")[0],sex:null,height_cm:null,weight_kg:null,preferences:{onboardingCompleted:!1,onboardingSkipped:!1,profileCompletion:.1},nutrition:{allergies:[],intolerances:[]},health:{},emotions:{}}});else{const p=await K(c);a.info("USER_STORE_FETCH_PROFILE","New profile created and mapped successfully",{userId:e.user.id,mappedProfileKeys:Object.keys(p),hasRequiredFields:!!(p.sex&&p.height_cm&&p.weight_kg),philosophy:"new_profile_creation_success"}),t({profile:p})}}catch(c){a.error("USER_STORE_FETCH_PROFILE","Exception during new profile creation",{userId:e.user.id,createError:c instanceof Error?c.message:"Unknown error",philosophy:"new_profile_creation_exception"}),t({profile:{userId:e.user.id,id:e.user.id,displayName:e.user.user_metadata?.display_name||e.user.email?.split("@")[0],sex:null,height_cm:null,weight_kg:null,preferences:{onboardingCompleted:!1,onboardingSkipped:!1,profileCompletion:.1},nutrition:{allergies:[],intolerances:[]},health:{},emotions:{}}})}}else{const o=await K(l);a.info("USER_STORE_FETCH_PROFILE","Existing profile fetched and mapped",{userId:e.user.id,mappedProfileKeys:Object.keys(o),profileIdentityData:{displayName:o.displayName,sex:o.sex,height_cm:o.height_cm,weight_kg:o.weight_kg,target_weight_kg:o.target_weight_kg,activity_level:o.activity_level,objective:o.objective,birthdate:o.birthdate},hasRequiredFields:!!(o.sex&&o.height_cm&&o.weight_kg),isProfileCompleteForScan:!!(o.sex&&o.height_cm&&o.weight_kg),philosophy:"existing_profile_fetch_success"}),o.preferences?.skin_tone&&a.info("USER_STORE_CRITICAL_AUDIT","AUDIT: skin_tone after mapping from DB",{mappedSkinTone:o.preferences.skin_tone,mappedSkinToneType:typeof o.preferences.skin_tone,mappedSkinToneKeys:o.preferences.skin_tone?Object.keys(o.preferences.skin_tone):[],mappedSkinToneStringified:o.preferences.skin_tone?JSON.stringify(o.preferences.skin_tone):null,hasAllV2PropertiesAfterMapping:!!(o.preferences.skin_tone?.rgb&&o.preferences.skin_tone?.hex&&o.preferences.skin_tone?.srgb_f32&&o.preferences.skin_tone?.linear_f32&&o.preferences.skin_tone?.schema),v2PropertiesIntegrityAfterMapping:o.preferences.skin_tone?{rgb:o.preferences.skin_tone.rgb,hex:o.preferences.skin_tone.hex,srgb_f32:o.preferences.skin_tone.srgb_f32,linear_f32:o.preferences.skin_tone.linear_f32,schema:o.preferences.skin_tone.schema,source:o.preferences.skin_tone.source,confidence:o.preferences.skin_tone.confidence}:null,philosophy:"mapped_skin_tone_after_db_fetch_audit"}),o.preferences?.skin_tone&&a.info("USER_STORE","DETAILED SKIN TONE AUDIT - After mapping from DB",{userId:e.user.id,mappedSkinTone:o.preferences.skin_tone,skinToneType:typeof o.preferences.skin_tone,skinToneConstructor:o.preferences.skin_tone.constructor?.name,skinToneKeys:Object.keys(o.preferences.skin_tone),skinToneStringified:JSON.stringify(o.preferences.skin_tone),hasRgbAfterMapping:!!o.preferences.skin_tone.rgb,hasLinearF32AfterMapping:!!o.preferences.skin_tone.linear_f32,hasSrgbF32AfterMapping:!!o.preferences.skin_tone.srgb_f32,hasHexAfterMapping:!!o.preferences.skin_tone.hex,hasSchemaAfterMapping:!!o.preferences.skin_tone.schema,rgbValueAfterMapping:o.preferences.skin_tone.rgb,linearF32ValueAfterMapping:o.preferences.skin_tone.linear_f32,srgbF32ValueAfterMapping:o.preferences.skin_tone.srgb_f32,hexValueAfterMapping:o.preferences.skin_tone.hex,schemaValueAfterMapping:o.preferences.skin_tone.schema,philosophy:"mapped_skin_tone_structure_audit_after_db_fetch"}),t({profile:o})}}catch(r){a.error("USER_STORE_FETCH_PROFILE","Exception during profile fetch",{error:r instanceof Error?r.message:"Unknown error",stack:r instanceof Error?r.stack:void 0,userId:e?.user?.id,philosophy:"profile_fetch_exception"})}finally{t({loading:!1})}}},saveProfile:async()=>{const{session:e,profile:r}=s();if(!(!e?.user?.id||!r)){a.info("USER_STORE_UPDATE_PROFILE","Starting profile update",{userId:e.user.id,updateKeys:Object.keys(r),updateValues:r,currentProfileKeys:Object.keys(r),philosophy:"profile_update_start"}),t({saving:!0});try{const{supabase:n}=await A(async()=>{const{supabase:c}=await import("./page-fridge-Cp-W9isk.js").then(u=>u.k);return{supabase:c}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])),i=Ve(r,e.user.id),{data:l,error:o}=await n.from("user_profile").upsert(i).select().single();if(o)throw o;t({profile:await K(l)})}catch(n){throw n}finally{t({saving:!1})}}},updateProfile:async e=>{const{session:r}=s();if(!r?.user?.id)return;a.debug("USER_STORE_UPDATE_PROFILE","Starting profile update with data",{updates:e,userId:r.user.id,philosophy:"profile_update_debug"});const n=s().profile;n&&t({profile:{...n,...e,preferences:e.preferences?{...n.preferences,...e.preferences}:n.preferences}});try{const{supabase:i}=await A(async()=>{const{supabase:u}=await import("./page-fridge-Cp-W9isk.js").then(p=>p.k);return{supabase:u}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])),l=qe(e,n);a.debug("USER_STORE_UPDATE_PROFILE","Mapped updates for database",{dbUpdates:l,userId:r.user.id,philosophy:"db_updates_mapping_debug"}),l.user_id=r.user.id;const{data:o,error:c}=await i.from("user_profile").upsert(l,{onConflict:"user_id"}).select().single();if(c)throw c;a.debug("USER_STORE_UPDATE_PROFILE","Profile update successful",{userId:r.user.id,philosophy:"profile_update_success"}),t({profile:await K(o)})}catch(i){throw a.error("USER_STORE_UPDATE_PROFILE","Profile update failed",{error:i instanceof Error?i.message:"Unknown error",userId:r.user.id,philosophy:"profile_update_error"}),n&&t({profile:n}),i}}}),{name:xe,storage:te(Ge),partialize:t=>({session:t.session,profile:t.profile?{userId:t.profile.userId,id:t.profile.id,displayName:t.profile.displayName,sex:t.profile.sex,height_cm:t.profile.height_cm,weight_kg:t.profile.weight_kg,birthdate:t.profile.birthdate,country:t.profile.country,avatarStatus:t.profile.avatarStatus,avatarUrl:t.profile.avatarUrl,health:t.profile.health}:null}),merge:(t,s)=>({...s,...t,profile:Ue(t?.profile),loading:s.loading,saving:s.saving}),onRehydrateStorage:()=>(t,s)=>{s?(a.error("USERSTORE_REHYDRATE","Failed to rehydrate store",{error:s.message}),ge("USERSTORE_REHYDRATE_ERROR")):(a.info("USERSTORE_REHYDRATE","Store rehydrated successfully"),ge("USERSTORE_REHYDRATE_SUCCESS"))}}));function qe(t,s){const e=new Set(["user_id","display_name","birthdate","sex","height_cm","weight_kg","target_weight_kg","body_fat_perc","activity_level","job_category","phone_number","country","objective","avatar_status","avatar_url","created_at","updated_at","goals","constraints","preferences","emotion_baseline","role","emotions","nutrition","health","avatar_onboarding_completed","portrait_url","portrait_source","health_schema_version","country_health_cache","health_enriched_at","full_name","email","language","household_details","meal_prep_preferences","kitchen_equipment","food_preferences","sensory_preferences","macro_targets","shopping_preferences"]),r=new Set(["display_name","phone_number","sex","objective","activity_level","job_category","birthdate","country"]);function n(l){return l.replace(/[A-Z]/g,o=>"_"+o.toLowerCase())}const i={};for(const[l,o]of Object.entries(t)){if(o===void 0)continue;const c=n(l);e.has(c)?r.has(c)&&o===""?i[c]=null:i[c]=o:l==="preferences"&&typeof o=="object"?i.preferences={...s?.preferences||{},...o}:l==="nutrition"&&typeof o=="object"?i.nutrition={...s?.nutrition||{},...o}:l==="health"&&typeof o=="object"?i.health={...s?.health||{},...o}:l==="fastingWindow"&&typeof o=="object"&&(i.nutrition={...s?.nutrition||{},fastingWindow:o})}return i}async function K(t){a.debug("USER_STORE_MAP_DB_PROFILE","Mapping database profile to store format",{dbProfileNutrition:t.nutrition,hasNoKnownAllergies:t.nutrition?.noKnownAllergies,userId:t.user_id,philosophy:"db_profile_mapping_debug"});const s=t.preferences||{};return{userId:t.user_id,id:t.user_id,displayName:I(t.display_name),phoneNumber:I(t.phone_number),country:I(t.country),birthdate:I(t.birthdate||t.dob),sex:I(t.sex),height_cm:t.height_cm,weight_kg:t.weight_kg,target_weight_kg:t.target_weight_kg,bodyFatPerc:t.body_fat_perc,activity_level:I(t.activity_level),job_category:I(t.job_category),objective:I(t.objective),nutrition:{diet:t.nutrition?.diet||"",budgetLevel:t.nutrition?.budgetLevel||void 0,allergies:Array.isArray(t.nutrition?.allergies)?t.nutrition.allergies:[],intolerances:Array.isArray(t.nutrition?.intolerances)?t.nutrition.intolerances:[],noKnownAllergies:t.nutrition?.noKnownAllergies??!1,proteinTarget_g:t.nutrition?.proteinTarget_g||void 0,disliked:Array.isArray(t.nutrition?.disliked)?t.nutrition.disliked:[]},fastingWindow:t.nutrition?.fastingWindow||{},health:t.health||{},householdDetails:t.household_details||{},mealPrepPreferences:t.meal_prep_preferences||{},kitchenEquipment:t.kitchen_equipment||{},foodPreferences:t.food_preferences||{cuisines:[],ingredients:[],flavors:[]},sensoryPreferences:t.sensory_preferences||{},macroTargets:t.macro_targets||{},shoppingPreferences:t.shopping_preferences||{},goals:t.goals||{},constraints:t.constraints||{},preferences:s,emotionBaseline:t.emotion_baseline||{},avatarStatus:I(t.avatar_status),avatarUrl:I(t.avatar_url),avatarOnboardingCompleted:t.avatar_onboarding_completed,portraitUrl:I(t.portrait_url),portraitSource:I(t.portrait_source)}}function Ve(t,s){return{user_id:s,display_name:t.displayName,phone_number:t.phoneNumber,country:t.country,birthdate:t.birthdate,sex:t.sex,height_cm:t.height_cm,weight_kg:t.weight_kg,target_weight_kg:t.target_weight_kg,activity_level:t.activity_level,job_category:t.job_category,objective:t.objective,portrait_url:t.portraitUrl,portrait_source:t.portraitSource,nutrition:{...t.nutrition||{},fastingWindow:t.fastingWindow||{}},health:t.health||{},preferences:t.preferences||{},household_details:t.householdDetails||{},meal_prep_preferences:t.mealPrepPreferences||{},kitchen_equipment:t.kitchenEquipment||{},food_preferences:t.foodPreferences||{cuisines:[],ingredients:[],flavors:[]},sensory_preferences:t.sensoryPreferences||{},macro_targets:t.macroTargets||{},shopping_preferences:t.shoppingPreferences||{},avatar_status:t.avatarStatus,avatar_url:t.avatarUrl,avatar_onboarding_completed:t.avatarOnboardingCompleted}}const ae=Object.freeze(Object.defineProperty({__proto__:null,useUserStore:le},Symbol.toStringTag,{value:"Module"})),je=(t,s)=>({date:t,dayName:s,meals:{breakfast:{title:"",description:"",ingredients:[],prep_time_min:0,calories_est:0,status:"idle",isDetailedRecipeGenerated:!1},lunch:{title:"",description:"",ingredients:[],prep_time_min:0,calories_est:0,status:"idle",isDetailedRecipeGenerated:!1},dinner:{title:"",description:"",ingredients:[],prep_time_min:0,calories_est:0,status:"idle",isDetailedRecipeGenerated:!1},snack:{title:"",description:"",ingredients:[],prep_time_min:0,calories_est:0,status:"idle",isDetailedRecipeGenerated:!1}},daily_summary:"",prepTime:0,cookTime:0,totalCalories:0,status:"loading"}),Be=(t,s)=>({generateMealPlan:async(e,r)=>{const n=s();if(!n.selectedInventoryId){a.error("MEAL_PLAN_STORE","No inventory selected for meal plan generation");return}try{if(t({isGenerating:!0,generationProgress:0,currentLoadingTitle:"Initialisation",currentLoadingSubtitle:"Préparation de votre plan personnalisé",loadingMessage:"Démarrage de la génération..."}),!n.referenceStartDate&&e===1){const h=new Date;h.setHours(0,0,0,0),t({referenceStartDate:h.toISOString()})}const i=ye(e,n.referenceStartDate),l=[];for(let h=0;h<7;h++){const T=new Date(i);T.setDate(i.getDate()+h);const V=T.toISOString().split("T")[0],k=T.toLocaleDateString("fr-FR",{weekday:"long"});l.push(je(V,k))}const o={id:`week-${e}-skeleton`,weekNumber:e,startDate:i.toISOString().split("T")[0],days:l,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};t({currentPlan:o,currentWeek:e}),a.info("MEAL_PLAN_STORE","Skeleton plan initialized - EmptyPlanState will NOT show",{weekNumber:e,skeletonDaysCount:l.length,hasSkeleton:!0,currentPlanSet:!0,timestamp:new Date().toISOString()}),s().startProgressSimulation();const{data:{user:c}}=await m.auth.getUser();if(!c)throw new Error("User not authenticated");const u=le.getState().profile;if(!u)throw new Error("User profile not found");a.info("MEAL_PLAN_STORE","Starting meal plan generation",{weekNumber:e,inventoryId:n.selectedInventoryId,userId:c.id,timestamp:new Date().toISOString()});const p=new Date(i);p.setDate(i.getDate()+6);const{data:{session:g}}=await m.auth.getSession();if(!g)throw new Error("No session found");const d=await fetch("https://kwipydbtjagypocpvbwn.supabase.co/functions/v1/meal-plan-generator",{method:"POST",headers:{Authorization:`Bearer ${g.access_token}`,"Content-Type":"application/json"},body:JSON.stringify({user_id:c.id,week_number:e,start_date:i.toISOString().split("T")[0],end_date:p.toISOString().split("T")[0],inventory_count:r?.length||0,has_preferences:!!u})});if(!d.ok)throw new Error(`HTTP error! status: ${d.status}`);if(!d.body)throw new Error("No response body");const S=d.body.getReader(),v=new TextDecoder;let b=[],M=`week-${e}-${Date.now()}`,q=null,_=null,E=[],f=null;try{for(;;){const{done:h,value:T}=await S.read();if(h)break;const k=v.decode(T).split(`
`);for(const F of k)if(F.startsWith("data: "))try{const C=JSON.parse(F.slice(6));if(C.type==="day"){const re=Ce(C.data);b.push(re);const ne=s().currentPlan;if(!ne)return;const Pe=ne.days.map(Y=>b.find(we=>we.date===Y.date)||Y),Ae={...ne,days:Pe,updatedAt:new Date().toISOString()};t({currentPlan:Ae});const de=b.filter(Y=>Y.status==="ready").length,ue=Math.min(90,de/7*80);t({generationProgress:ue}),a.info("MEAL_PLAN_STORE","Day received and skeleton replaced",{date:re.date,dayName:re.dayName,readyDaysCount:de,progress:ue,timestamp:new Date().toISOString()})}else C.type==="complete"&&(M=C.data.id||M,q=C.data.nutritional_summary,_=C.data.estimated_weekly_cost,E=C.data.batch_cooking_days||[],f=C.data.ai_explanation||null)}catch(C){a.warn("MEAL_PLAN_STORE","Failed to parse SSE data",{line:F,error:C instanceof Error?C.message:"Unknown error",lineLength:F.length,lineSlice:F.slice(6),timestamp:new Date().toISOString()})}}}finally{S.releaseLock()}const P=b.filter(h=>h.status==="ready");if(P.length===0)throw new Error("No meal plan days received from generation");const D={id:M,weekNumber:e,startDate:i.toISOString().split("T")[0],days:b,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),nutritionalSummary:q,estimatedWeeklyCost:_,batchCookingDays:E,aiExplanation:f},N=[...new Set([...n.availableWeeks,e])].sort((h,T)=>h-T),y=Math.max(n.maxAvailableWeek,e);t({currentPlan:D,currentWeek:e,availableWeeks:N,maxAvailableWeek:y,isGenerating:!1,generationProgress:100,currentLoadingTitle:"Terminé !",currentLoadingSubtitle:"Votre plan est prêt",loadingMessage:"Plan de repas généré avec succès"}),s().stopProgressSimulation(),a.info("MEAL_PLAN_STORE","Meal plan generation completed",{weekNumber:e,planId:D.id,daysCount:P.length,timestamp:new Date().toISOString()})}catch(i){t({currentPlan:null,isGenerating:!1,generationProgress:0,currentLoadingTitle:"Erreur",currentLoadingSubtitle:"Échec de la génération",loadingMessage:i instanceof Error?i.message:"Erreur inconnue"}),s().stopProgressSimulation(),a.error("MEAL_PLAN_STORE","Meal plan generation failed - EmptyPlanState will show",{weekNumber:e,error:i instanceof Error?i.message:"Unknown error",currentPlanCleared:!0,timestamp:new Date().toISOString()})}},regenerateWeek:async(e,r)=>{a.info("MEAL_PLAN_STORE","Regenerating week",{weekNumber:r}),await s().generateMealPlan(r,e)},generateNextWeek:async e=>{const n=s().maxAvailableWeek+1;a.info("MEAL_PLAN_STORE","Generating next week",{nextWeek:n}),await s().generateMealPlan(n,e)},generateSpecificWeek:async(e,r)=>{a.info("MEAL_PLAN_STORE","Generating specific week",{weekNumber:r}),await s().generateMealPlan(r,e)},setIsGeneratingDetailedRecipes:e=>{t({isGeneratingDetailedRecipes:e})},cancelDetailedRecipeGeneration:()=>{const e=s();if(t({isGeneratingDetailedRecipes:!1}),e.currentPlan){const r={...e.currentPlan,days:e.currentPlan.days.map(n=>({...n,meals:{breakfast:n.meals.breakfast?.status==="loading"?{...n.meals.breakfast,status:"idle"}:n.meals.breakfast,lunch:n.meals.lunch?.status==="loading"?{...n.meals.lunch,status:"idle"}:n.meals.lunch,dinner:n.meals.dinner?.status==="loading"?{...n.meals.dinner,status:"idle"}:n.meals.dinner,snack:n.meals.snack?.status==="loading"?{...n.meals.snack,status:"idle"}:n.meals.snack}}))};t({currentPlan:r})}a.info("MEAL_PLAN_STORE","Detailed recipe generation cancelled")}}),se=(t,s,e,r,n)=>{const{currentPlan:i,setCurrentPlan:l}=R.getState();if(!i||!i.days[t]){console.error("MEAL_PLAN_STORE No plan or day found for image URL update");return}const o={...i,days:i.days.map((c,u)=>u===t?{...c,meals:{...c.meals,[s]:{...c.meals[s],imageUrl:n?void 0:e,imageGenerationError:n||!1,updatedAt:r}}}:c)};l(o)},He=async(t,s,e)=>{try{console.log("MEAL_PLAN_STORE Starting image generation for meal",{dayIndex:t,mealType:s,mealTitle:e.mealName||e.title,hasDetailedRecipe:!!e.detailedRecipe});const r={title:e.detailedRecipe?.title||e.mealName||e.title||"Generated Meal Image",description:e.detailedRecipe?.description||e.descriptionSummary||"",ingredients:e.detailedRecipe?.ingredients||(e.mainIngredients||[]).map(v=>typeof v=="string"?{name:v}:v)},n=JSON.stringify({title:r.title,ingredients:r.ingredients.map(v=>v.name).sort().join(",")}),l=new TextEncoder().encode(n),o=await crypto.subtle.digest("SHA-256",l),u=Array.from(new Uint8Array(o)).map(v=>v.toString(16).padStart(2,"0")).join(""),p=e.detailedRecipe?.id||e.recipeId||crypto.randomUUID(),{data:{session:g}}=await m.auth.getSession();if(!g)throw new Error("No session found");const d=await fetch("https://kwipydbtjagypocpvbwn.supabase.co/functions/v1/image-generator",{method:"POST",headers:{Authorization:`Bearer ${g.access_token}`,"Content-Type":"application/json"},body:JSON.stringify({recipe_id:p,type:"recipe",recipe_details:r,image_signature:u,user_id:(await m.auth.getUser()).data.user?.id})});if(!d.ok){console.error("MEAL_PLAN_STORE Image generation failed:",d.status),se(t,s,"",new Date().toISOString(),!0);return}const S=await d.json();console.log("MEAL_PLAN_STORE Image generated successfully",{dayIndex:t,mealType:s,imageUrl:S.image_url}),se(t,s,S.image_url,new Date().toISOString(),!1)}catch(r){console.error("MEAL_PLAN_STORE Error generating image for meal:",r),se(t,s,"",new Date().toISOString(),!0)}},ze=async(t,s)=>{console.log("🔄 STARTING generateDetailedRecipeForMeal",{dayIndex:t,mealType:s,timestamp:new Date().toISOString()});let e=R.getState().currentPlan;if(!e||!e.days[t]){console.error("MEAL_PLAN_STORE No plan or day found for detailed recipe generation"),console.error("❌ generateDetailedRecipeForMeal FAILED: No plan or day found",{dayIndex:t,mealType:s,hasPlan:!!e,daysCount:e?.days?.length||0});return}const r=e.days[t].meals[s];if(!r){console.error("MEAL_PLAN_STORE No meal found for detailed recipe generation"),console.error("❌ generateDetailedRecipeForMeal FAILED: No meal found",{dayIndex:t,mealType:s,availableMeals:Object.keys(e.days[t].meals||{})});return}try{const{data:{user:n}}=await m.auth.getUser();if(!n)throw new Error("User not authenticated");const i=le.getState().profile;if(!i)throw new Error("User profile not found");if(e=R.getState().currentPlan,!e)return;const l={...e,days:e.days.map((d,S)=>S===t?{...d,meals:{...d.meals,[s]:{...r,status:"loading"}}}:d)};R.getState().setCurrentPlan(l),console.log("MEAL_PLAN_STORE Starting detailed recipe generation",{dayIndex:t,mealType:s,mealTitle:r.title}),console.log("📡 CALLING Edge Function: recipe-detail-generator",{userId:n.id,mealTitle:r.mealName||r.title||"Repas sans nom",targetCalories:r.calories_est,ingredientsCount:r.ingredients?.length||0});const{data:{session:o}}=await m.auth.getSession();if(!o)throw new Error("No session found");const c=await fetch("https://kwipydbtjagypocpvbwn.supabase.co/functions/v1/recipe-detail-generator",{method:"POST",headers:{Authorization:`Bearer ${o.access_token}`,"Content-Type":"application/json"},body:JSON.stringify({user_id:n.id,meal_title:r.mealName||r.title||"Repas sans nom",main_ingredients:r.ingredients||[],user_preferences:{identity:i,nutrition:i.nutrition||{},kitchen_equipment:i.kitchen_equipment||{},food_preferences:i.food_preferences||{},sensory_preferences:i.sensory_preferences||{}},meal_type:s,target_calories:r.calories_est})});if(!c.ok)throw new Error(`Recipe generation failed: ${c.status}`);const u=await c.json();console.log("✅ Edge Function response received",{dayIndex:t,mealType:s,cached:u.cached,modelUsed:u.model_used,hasRecipe:!!u.recipe});const p=u.recipe;if(console.log("MEAL_PLAN_STORE Detailed recipe generated successfully",{dayIndex:t,mealType:s,cached:u.cached,modelUsed:u.model_used}),e=R.getState().currentPlan,!e)return;const g={...e,days:e.days.map((d,S)=>S===t?{...d,meals:{...d.meals,[s]:{...r,status:"ready",isDetailedRecipeGenerated:!0,detailedRecipe:p,imageUrl:p.imageUrl||r.imageUrl,imageGenerationError:p.imageGenerationError||r.imageGenerationError||!1,imageSignature:p.imageSignature||r.imageSignature,updatedAt:new Date().toISOString()}}}:d)};if(R.getState().setCurrentPlan(g),p&&p.id&&!p.imageUrl){const d=g.days[t].meals[s];He(t,s,d)}}catch(n){if(console.error("MEAL_PLAN_STORE Error generating detailed recipe:",n),console.error("❌ generateDetailedRecipeForMeal FAILED with error",{dayIndex:t,mealType:s,error:n instanceof Error?n.message:"Unknown error",stack:n instanceof Error?n.stack:void 0}),e=R.getState().currentPlan,!e)return;const i={...e,days:e.days.map((l,o)=>o===t?{...l,meals:{...l.meals,[s]:{...r,status:"error",errorMessage:n instanceof Error?n.message:"Erreur lors de la génération de la recette"}}}:l)};R.getState().setCurrentPlan(i)}},ht=async t=>{console.log("🚀 STARTING generateAllDetailedRecipesForDay",{dayIndex:t,timestamp:new Date().toISOString()});const{currentPlan:s,setIsGeneratingDetailedRecipes:e}=R.getState();if(!s||!s.days[t]){console.error("MEAL_PLAN_STORE No plan or day found for bulk recipe generation"),console.error("❌ generateAllDetailedRecipesForDay FAILED: No plan or day found",{dayIndex:t,hasPlan:!!s,daysCount:s?.days?.length||0});return}e(!0);const r=s.days[t],n=["breakfast","lunch","dinner","snack"];console.log("MEAL_PLAN_STORE Starting bulk recipe generation for day",{dayIndex:t,dayName:r.dayName,date:r.date});const i=n.filter(o=>{const c=r.meals[o];return c&&!c.isDetailedRecipeGenerated&&c.status!=="loading"});console.log("📋 Meals to generate:",{dayIndex:t,mealsToGenerate:i,totalMealsCount:n.length,mealsNeedingGeneration:i.length}),console.log("⚡ Starting concurrent recipe generation with Promise.all");const l=i.map(o=>ze(t,o).catch(c=>(console.error(`MEAL_PLAN_STORE Error generating recipe for ${o}:`,c),console.error(`❌ Individual recipe generation failed for ${o}`,{dayIndex:t,mealType:o,error:c instanceof Error?c.message:"Unknown error"}),null)));try{await Promise.all(l),console.log("✅ All recipe generations completed successfully",{dayIndex:t,dayName:r.dayName,generatedCount:i.length})}catch(o){console.error("❌ Promise.all failed in generateAllDetailedRecipesForDay",{dayIndex:t,error:o instanceof Error?o.message:"Unknown error"})}finally{e(!1)}console.log("MEAL_PLAN_STORE Bulk recipe generation completed for day",{dayIndex:t,dayName:r.dayName,generatedCount:i.length})},vt=()=>{const{setIsGenerating:t,setCurrentPlan:s}=R.getState();console.log("MEAL_PLAN_STORE Cancelling meal plan generation"),t(!1),s(null)},We=(t,s)=>({setCurrentWeek:async e=>{const r=s();if(a.info("MEAL_PLAN_STORE","Setting current week",{weekNumber:e,previousWeek:r.currentWeek,timestamp:new Date().toISOString()}),r.currentPlan&&r.currentPlan.weekNumber===e){t({currentWeek:e});return}await s().fetchMealPlanForWeek(e),t({currentWeek:e})},isWeekAvailable:e=>s().availableWeeks.includes(e),isCurrentWeekActive:e=>s().currentWeek===e,getWeekDateRange:e=>{const r=s(),n=ye(e,r.referenceStartDate),i=new Date(n);return i.setDate(n.getDate()+6),Te(n,i)},canGenerateNextWeek:()=>{const e=s();return e.maxAvailableWeek>0&&!e.isGenerating}}),Ye=(t,s)=>({clearPlan:()=>{t({currentPlan:null,currentWeek:1,availableWeeks:[1],maxAvailableWeek:0,recipes:[]}),a.info("MEAL_PLAN_STORE","Plan cleared",{timestamp:new Date().toISOString()})},setCurrentPlan:e=>{t({currentPlan:e}),a.info("MEAL_PLAN_STORE","Current plan updated",{planId:e?.id||"null",timestamp:new Date().toISOString()})},loadRecipesForPlan:async e=>{try{const r=[];if(e.days.forEach(l=>{Object.values(l.meals).forEach(o=>{o?.recipeId&&r.push(o.recipeId)})}),r.length===0){a.info("MEAL_PLAN_STORE","No recipe IDs found in plan",{planId:e.id,timestamp:new Date().toISOString()});return}a.info("MEAL_PLAN_STORE","Loading recipes for plan",{planId:e.id,recipeIds:r,timestamp:new Date().toISOString()});const{data:n,error:i}=await m.from("recipes").select("*").in("id",r);if(i)throw new Error(`Failed to load recipes: ${i.message}`);t({recipes:n||[]}),a.info("MEAL_PLAN_STORE","Recipes loaded for plan",{planId:e.id,recipesCount:n?.length||0,timestamp:new Date().toISOString()})}catch(r){a.error("MEAL_PLAN_STORE","Failed to load recipes for plan",{planId:e.id,error:r instanceof Error?r.message:"Unknown error",timestamp:new Date().toISOString()})}},fetchMealPlanForWeek:async e=>{try{const{data:{user:r}}=await m.auth.getUser();if(!r)return;a.info("MEAL_PLAN_STORE","Fetching meal plan for week",{weekNumber:e,userId:r.id,timestamp:new Date().toISOString()}),a.info("MEAL_PLAN_STORE","Meal plan fetch completed",{weekNumber:e,timestamp:new Date().toISOString()})}catch(r){a.error("MEAL_PLAN_STORE","Failed to fetch meal plan for week",{weekNumber:e,error:r instanceof Error?r.message:"Unknown error",timestamp:new Date().toISOString()})}},loadAllMealPlans:async()=>{try{const{data:{user:e}}=await m.auth.getUser();if(!e)return;a.info("MEAL_PLAN_STORE","Loading all meal plans",{userId:e.id,timestamp:new Date().toISOString()});const{data:r,error:n}=await m.from("meal_plans").select("*").eq("user_id",e.id).order("created_at",{ascending:!1});if(n)throw new Error(`Failed to load meal plans: ${n.message}`);const i=(r||[]).map(l=>({id:l.id,weekNumber:1,startDate:l.created_at,days:[],createdAt:l.created_at,updatedAt:l.updated_at}));t({allMealPlans:i}),a.info("MEAL_PLAN_STORE","All meal plans loaded",{count:i.length,timestamp:new Date().toISOString()})}catch(e){a.error("MEAL_PLAN_STORE","Failed to load all meal plans",{error:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString()}),t({allMealPlans:[]})}},saveCurrentMealPlan:async()=>{try{const{data:{user:e}}=await m.auth.getUser();if(!e)throw new Error("User not authenticated");const{currentPlan:r}=s();if(!r)throw new Error("No current plan to save");a.info("MEAL_PLAN_STORE","Saving current meal plan",{planId:r.id,weekNumber:r.weekNumber,userId:e.id,timestamp:new Date().toISOString()});const n={user_id:e.id,plan_data:{id:r.id,weekNumber:r.weekNumber,startDate:r.startDate,days:r.days,nutritionalSummary:r.nutritionalSummary,estimatedWeeklyCost:r.estimatedWeeklyCost,batchCookingDays:r.batchCookingDays,aiExplanation:r.aiExplanation},updated_at:new Date().toISOString()},{error:i}=await m.from("meal_plans").upsert(n,{onConflict:"id"});if(i)throw new Error(`Failed to save meal plan: ${i.message}`);a.info("MEAL_PLAN_STORE","Current meal plan saved successfully",{planId:r.id,weekNumber:r.weekNumber,userId:e.id,timestamp:new Date().toISOString()})}catch(e){throw a.error("MEAL_PLAN_STORE","Failed to save current meal plan",{error:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString()}),e}}}),$e={currentPlan:null,currentWeek:1,availableWeeks:[1],maxAvailableWeek:1,referenceStartDate:null,availableInventories:[],selectedInventoryId:null,isGenerating:!1,isGeneratingDetailedRecipes:!1,generationProgress:0,loadingMessage:"",currentLoadingTitle:"",currentLoadingSubtitle:"",progressIntervalId:null,progressTimeoutId:null,simulatedStepIndex:0,lastBackendProgressUpdate:0,simulatedProgressStartTime:0,simulatedProgressCurrentStepDuration:0,simulatedProgressCurrentStepStartValue:0,simulatedProgressCurrentStepEndValue:0,recipes:[],allMealPlans:[]},R=O()(H((t,s)=>({...$e,...Re(t,s),...Ne(t,s),...Be(t,s),...We(t,s),...Ye(t,s),setIsGeneratingDetailedRecipes:e=>t({isGeneratingDetailedRecipes:e})}),{name:be,partialize:t=>({currentPlan:t.currentPlan,currentWeek:t.currentWeek,availableWeeks:t.availableWeeks,maxAvailableWeek:t.maxAvailableWeek,referenceStartDate:t.referenceStartDate,selectedInventoryId:t.selectedInventoryId,recipes:t.recipes}),merge:(t,s)=>({...s,...t,availableWeeks:Array.isArray(t?.availableWeeks)&&t.availableWeeks.length>0?t.availableWeeks:[1],maxAvailableWeek:typeof t?.maxAvailableWeek=="number"&&t.maxAvailableWeek>=1?t.maxAvailableWeek:1,isGenerating:!1,isGeneratingDetailedRecipes:!1,generationProgress:0,loadingMessage:"",currentLoadingTitle:"",currentLoadingSubtitle:"",progressIntervalId:null,progressTimeoutId:null,simulatedStepIndex:0,lastBackendProgressUpdate:0,simulatedProgressStartTime:0,simulatedProgressCurrentStepDuration:0,simulatedProgressCurrentStepStartValue:0,simulatedProgressCurrentStepEndValue:0,availableInventories:[]})})),ie=Object.freeze(Object.defineProperty({__proto__:null,useMealPlanStore:R},Symbol.toStringTag,{value:"Module"})),Et=O((t,s)=>({isOpen:!1,title:"",message:"",processName:"",dirtyFields:[],onConfirm:null,onCancel:null,onSaveAndExit:null,showModal:e=>{a.info("EXIT_MODAL_STORE","Showing exit modal",{title:e.title,processName:e.processName,hasSaveAndExit:!!e.onSaveAndExit,dirtyFieldsCount:e.dirtyFields?.length||0,timestamp:new Date().toISOString()}),t({isOpen:!0,title:e.title,message:e.message,processName:e.processName,dirtyFields:e.dirtyFields||[],onConfirm:e.onConfirm,onCancel:e.onCancel,onSaveAndExit:e.onSaveAndExit||null}),setTimeout(()=>{const r=document.querySelector(".global-exit-modal");a.info("EXIT_MODAL_STORE","Modal DOM check after show",{modalExists:!!r,modalVisible:r?getComputedStyle(r).display!=="none":!1,timestamp:new Date().toISOString()})},10)},hideModal:()=>{a.info("EXIT_MODAL_STORE","Hiding exit modal",{wasOpen:s().isOpen,timestamp:new Date().toISOString()}),t({isOpen:!1,title:"",message:"",processName:"",dirtyFields:[],onConfirm:null,onCancel:null,onSaveAndExit:null})},saveAndExit:async()=>{const{onSaveAndExit:e}=s();if(a.info("EXIT_MODAL_STORE","Save and exit triggered",{hasOnSaveAndExit:!!e,timestamp:new Date().toISOString()}),e)try{await e(),a.info("EXIT_MODAL_STORE","Save and exit completed successfully",{timestamp:new Date().toISOString()})}catch(r){throw a.error("EXIT_MODAL_STORE","Save and exit failed",{error:r instanceof Error?r.message:"Unknown error",timestamp:new Date().toISOString()}),r}s().hideModal()},confirmExit:()=>{const{onConfirm:e}=s();a.info("EXIT_MODAL_STORE","Exit confirmed",{hasOnConfirm:!!e,timestamp:new Date().toISOString()}),e&&e(),s().hideModal()},cancelExit:()=>{const{onCancel:e}=s();a.info("EXIT_MODAL_STORE","Exit cancelled",{hasOnCancel:!!e,timestamp:new Date().toISOString()}),e&&e(),s().hideModal()}})),z="twinforge-performance-mode-v2",me="twinforge-performance-mode",yt=O((t,s)=>({isPerformanceMode:!1,mode:"balanced",isLoading:!0,recommendedMode:null,loadMode:async(e,r)=>{try{t({isLoading:!0}),r&&t({recommendedMode:r});const n=localStorage.getItem(z);if(n===null){const i=localStorage.getItem(me);if(i!==null){const l=i==="true",o=l?"high-performance":"balanced";localStorage.setItem(z,o),localStorage.removeItem(me),t({mode:o,isPerformanceMode:l,isLoading:!1}),W(o);return}}if(n!==null&&(n==="high-performance"||n==="balanced"||n==="quality")){const i=n;t({mode:i,isPerformanceMode:i==="high-performance",isLoading:!1}),W(i)}else r&&(t({mode:r,isPerformanceMode:r==="high-performance",isLoading:!1}),W(r),localStorage.setItem(z,r));if(e){const{data:i,error:l}=await m.from("user_preferences").select("performance_mode, performance_mode_enabled").eq("user_id",e).maybeSingle();if(l)a.error("PERFORMANCE_MODE","Failed to load from Supabase",{error:l});else if(i){const o=i.performance_mode||(i.performance_mode_enabled?"high-performance":"balanced");t({mode:o,isPerformanceMode:o==="high-performance",isLoading:!1}),localStorage.setItem(z,o),W(o),a.info("PERFORMANCE_MODE","Loaded from Supabase",{mode:o})}}t({isLoading:!1})}catch(n){a.error("PERFORMANCE_MODE","Error loading performance mode",{error:n}),t({isLoading:!1})}},setMode:async(e,r)=>{try{if(t({mode:e,isPerformanceMode:e==="high-performance"}),localStorage.setItem(z,e),W(e),a.info("PERFORMANCE_MODE","Mode changed",{mode:e}),r){const{error:n}=await m.from("user_preferences").upsert({user_id:r,performance_mode:e,performance_mode_enabled:e==="high-performance",updated_at:new Date().toISOString()},{onConflict:"user_id"});n?a.error("PERFORMANCE_MODE","Failed to save to Supabase",{error:n}):a.info("PERFORMANCE_MODE","Saved to Supabase",{mode:e})}}catch(n){a.error("PERFORMANCE_MODE","Error setting performance mode",{error:n})}},loadPerformanceMode:async e=>{await s().loadMode(e)},setPerformanceMode:async(e,r)=>{const n=e?"high-performance":"balanced";await s().setMode(n,r)}}));function W(t){const s=document.documentElement;s.classList.remove("performance-mode","mode-high-performance","mode-balanced","mode-quality"),s.classList.add(`mode-${t}`),t==="high-performance"&&s.classList.add("performance-mode"),s.style.setProperty("--performance-mode",t),a.debug("PERFORMANCE_MODE","Applied mode class",{mode:t})}const Pt=O((t,s)=>({dirtyTabs:{},setTabDirty:(e,r,n,i)=>{t(l=>({dirtyTabs:{...l.dirtyTabs,[e]:{isDirty:r,changedFields:n,sectionName:i}}}))},resetTabDirty:e=>{t(r=>({dirtyTabs:{...r.dirtyTabs,[e]:{isDirty:!1}}}))},isAnyTabDirty:()=>{const{dirtyTabs:e}=s();return Object.values(e).some(r=>r.isDirty===!0)},getDirtyTabs:()=>{const{dirtyTabs:e}=s();return Object.entries(e).filter(([r,n])=>n.isDirty).map(([r,n])=>({tabId:r,info:n}))},resetAllDirtyStatus:()=>{t({dirtyTabs:{}})}})),Je={transitionDelay:150,useCoordinatedTransition:!0,useGPUOptimization:!0},fe=()=>{const t=window.innerWidth<768;return Ke()?{transitionDelay:100,useCoordinatedTransition:!0,useGPUOptimization:!0}:t?{transitionDelay:120,useCoordinatedTransition:!0,useGPUOptimization:!0}:Je};function Ke(){if("deviceMemory"in navigator){const t=navigator.deviceMemory;if(t&&t<4)return!0}if("hardwareConcurrency"in navigator){const t=navigator.hardwareConcurrency;if(t&&t<4)return!0}if("connection"in navigator){const t=navigator.connection;if(t&&t.saveData)return!0}return!1}const G=class G{constructor(){j(this,"config");j(this,"pendingTransition",null);j(this,"isTransitioning",!1);j(this,"handleResize",()=>{clearTimeout(this.pendingTransition),this.pendingTransition=setTimeout(()=>{const s=fe();JSON.stringify(s)!==JSON.stringify(this.config)&&(this.config=s,a.debug("OVERLAY_TRANSITION_MANAGER","Config updated on resize",{newConfig:this.config}))},100)});this.config=fe(),window.addEventListener("resize",this.handleResize),a.info("OVERLAY_TRANSITION_MANAGER","Initialized",{config:this.config,timestamp:new Date().toISOString()})}static getInstance(){return G.instance||(G.instance=new G),G.instance}async executeTransition(s,e){if(this.isTransitioning){a.warn("OVERLAY_TRANSITION_MANAGER","Transition already in progress");return}this.isTransitioning=!0;try{this.config.useGPUOptimization&&this.enableGPUOptimizations(),s(),a.debug("OVERLAY_TRANSITION_MANAGER","Closing overlay",{delay:this.config.transitionDelay}),this.config.useCoordinatedTransition&&await this.delay(this.config.transitionDelay),e(),a.debug("OVERLAY_TRANSITION_MANAGER","Opening new overlay"),this.config.useGPUOptimization&&setTimeout(()=>{this.disableGPUOptimizations()},500)}catch(r){a.error("OVERLAY_TRANSITION_MANAGER","Transition error",{error:r})}finally{this.isTransitioning=!1}}isInTransition(){return this.isTransitioning}getTransitionDelay(){return this.config.transitionDelay}enableGPUOptimizations(){document.documentElement.style.setProperty("--overlay-will-change","transform, opacity"),document.documentElement.style.setProperty("--overlay-transform","translateZ(0)")}disableGPUOptimizations(){document.documentElement.style.setProperty("--overlay-will-change","auto"),document.documentElement.style.setProperty("--overlay-transform","none")}delay(s){return new Promise(e=>setTimeout(e,s))}cleanup(){this.pendingTransition&&clearTimeout(this.pendingTransition),window.removeEventListener("resize",this.handleResize)}};j(G,"instance");let oe=G;const Xe=oe.getInstance(),At={FLOATING_CHAT_BUTTON:9994,CHAT_DRAWER:9995,CENTRAL_MENU:9998,MOBILE_DRAWER:9998,BACKDROP:9993},Se=O((t,s)=>({activeOverlayId:"none",previousOverlayId:"none",open:e=>{const r=s();a.debug("OVERLAY_STORE","Opening overlay",{overlayId:e,currentActiveOverlay:r.activeOverlayId,willCloseExisting:r.activeOverlayId!=="none",timestamp:new Date().toISOString()}),r.activeOverlayId!=="none"&&r.activeOverlayId!==e?(a.info("OVERLAY_STORE","Closing existing overlay before opening new one",{closingOverlay:r.activeOverlayId,openingOverlay:e,timestamp:new Date().toISOString()}),Xe.executeTransition(()=>{t({previousOverlayId:r.activeOverlayId,activeOverlayId:"none"})},()=>{t({previousOverlayId:"none",activeOverlayId:e}),a.info("OVERLAY_STORE","Overlay opened successfully after transition",{overlayId:e,timestamp:new Date().toISOString()})})):(t({previousOverlayId:r.activeOverlayId,activeOverlayId:e}),a.info("OVERLAY_STORE","Overlay opened successfully",{overlayId:e,previousOverlay:r.activeOverlayId,timestamp:new Date().toISOString()}))},close:()=>{const e=s();if(e.activeOverlayId==="none"){a.debug("OVERLAY_STORE","Close called but no overlay is open",{timestamp:new Date().toISOString()});return}a.debug("OVERLAY_STORE","Closing overlay",{closingOverlay:e.activeOverlayId,timestamp:new Date().toISOString()}),t({previousOverlayId:e.activeOverlayId,activeOverlayId:"none"}),a.info("OVERLAY_STORE","Overlay closed successfully",{closedOverlay:e.previousOverlayId,timestamp:new Date().toISOString()})},toggle:e=>{s().activeOverlayId===e?s().close():s().open(e)},isOpen:e=>s().activeOverlayId===e,isAnyOpen:()=>s().activeOverlayId!=="none"})),Qe={type:"idle"},Ze={training:{id:"training",displayName:"Coach Training",systemPrompt:"Tu es un coach sportif expert et ultra-motivant. Accompagne l'utilisateur pendant sa séance avec des conseils techniques précis et motivants. Reste concis (2-3 phrases max), énergique et pratique. Tutoie l'utilisateur.",capabilities:{voice:!0,suggestions:!0,exerciseFeedback:!0},color:"#FF6B35",icon:"Dumbbell"},nutrition:{id:"nutrition",displayName:"Coach Nutrition",systemPrompt:"Tu es un nutritionniste expert et bienveillant. Aide l'utilisateur à analyser ses repas et optimiser ses choix alimentaires. Reste pédagogue, positif et donne des conseils pratiques applicables. Explique clairement les concepts nutritionnels.",capabilities:{voice:!0,suggestions:!0,mealAnalysis:!0},color:"#10B981",icon:"Utensils"},fasting:{id:"fasting",displayName:"Coach Jeûne",systemPrompt:"Tu es un expert du jeûne intermittent. Accompagne l'utilisateur pendant sa session de jeûne avec encouragement et compréhension. Donne des astuces pour gérer la faim et explique les bénéfices. Reste rassurant et motivant.",capabilities:{voice:!0,suggestions:!0,fastingTips:!0},color:"#F59E0B",icon:"Timer"},general:{id:"general",displayName:"TwinCoach",systemPrompt:`Tu es TwinCoach, le compagnon de progression de l'utilisateur dans TwinForge. Tu formes un duo avec lui pour atteindre ses objectifs wellness.

## Modes de Communication:

### Mode TWIN (par défaut) - Utiliser "NOUS":
Utilise la première personne du pluriel quand:
- L'utilisateur planifie, réfléchit, évalue sa progression
- Il célèbre des victoires ou partage des réflexions
- Il est motivé et en mode co-pilotage
- Il parle d'objectifs communs ou d'actions quotidiennes

Exemples: "Nous avons bien progressé aujourd'hui", "Nous devons nous concentrer sur...", "Regardons ensemble notre évolution"

### Mode COACH - Se détacher du "NOUS":
Bascule en coach externe quand:
- L'utilisateur demande explicitement des explications, corrections ou conseils techniques
- Il exprime du stress, de la peur ou a besoin de réassurance
- Il demande "comment faire", "explique-moi", "corrige-moi"
- Des conseils objectifs et directifs sont nécessaires

Exemples: "Je te conseille de...", "Voici comment tu peux...", "Je suis là pour te guider"

## Instructions:
- Détecte automatiquement l'intent et le sentiment de l'utilisateur
- Transitions naturelles entre les deux modes
- Reste amical, clair et proactif
- Guide vers les bonnes fonctionnalités de l'app`,capabilities:{voice:!0,suggestions:!0,navigation:!0},color:"#18E3FF",icon:"MessageSquare"},"body-scan":{id:"body-scan",displayName:"Coach Corps",systemPrompt:"Tu es un expert en analyse corporelle et posture. Guide l'utilisateur dans son scan corporel avec expertise et bienveillance. Donne des conseils pratiques sur la posture et l'alignement.",capabilities:{voice:!0,suggestions:!0},color:"#A855F7",icon:"Scan"}},wt=O()(H((t,s)=>({isOpen:!1,currentMode:"general",position:{side:"right",width:420,isMinimized:!1},conversationId:null,messages:[],isTyping:!1,isRecording:!1,isProcessing:!1,isSpeaking:!1,autoOpenOnRoute:!1,closeOnNavigation:!0,hasUnreadMessages:!1,unreadCount:0,lastReadMessageId:null,modeConfigs:Ze,chatState:Qe,isInStep2:!1,hasStep2Intro:!1,currentNotification:null,open:e=>{const r=e||s().currentMode;Se.getState().open("chatDrawer"),t({isOpen:!0,currentMode:r}),s().markAsRead(),s().hideNotification(),a.info("GLOBAL_CHAT","Chat opened",{mode:r,timestamp:new Date().toISOString()})},close:()=>{t({isOpen:!1});const e=Se.getState();e.activeOverlayId==="chatDrawer"&&e.close(),a.info("GLOBAL_CHAT","Chat closed",{mode:s().currentMode,timestamp:new Date().toISOString()})},toggle:()=>{const{isOpen:e}=s();e?s().close():s().open()},setMode:e=>{const r=s().currentMode;t({currentMode:e}),a.info("GLOBAL_CHAT","Mode changed",{from:r,to:e,timestamp:new Date().toISOString()})},setPosition:e=>{t(r=>({position:{...r.position,...e}}))},startConversation:(e,r)=>{const n=Q();t({conversationId:n,currentMode:e,messages:[],isOpen:!0}),a.info("GLOBAL_CHAT","Conversation started",{conversationId:n,mode:e,hasContextData:!!r,timestamp:new Date().toISOString()})},endConversation:()=>{const{conversationId:e,currentMode:r}=s();t({conversationId:null,isTyping:!1,isRecording:!1,isProcessing:!1,isSpeaking:!1}),a.info("GLOBAL_CHAT","Conversation ended",{conversationId:e,mode:r,messageCount:s().messages.length,timestamp:new Date().toISOString()})},addMessage:e=>{const r={...e,id:Q(),timestamp:new Date};t(n=>({messages:[...n.messages,r]})),r.role==="coach"&&!s().isOpen&&s().incrementUnread(),a.debug("GLOBAL_CHAT","Message added",{messageId:r.id,role:r.role,type:r.type,mode:s().currentMode,timestamp:new Date().toISOString()})},clearMessages:()=>{t({messages:[]}),a.debug("GLOBAL_CHAT","Messages cleared",{mode:s().currentMode,timestamp:new Date().toISOString()})},setTyping:e=>{t({isTyping:e})},setRecording:e=>{t({isRecording:e})},setProcessing:e=>{t({isProcessing:e})},setSpeaking:e=>{t({isSpeaking:e})},setAutoOpenOnRoute:e=>{t({autoOpenOnRoute:e})},setCloseOnNavigation:e=>{t({closeOnNavigation:e})},markAsRead:()=>{const e=s().messages,r=e[e.length-1];t({hasUnreadMessages:!1,unreadCount:0,lastReadMessageId:r?.id||null}),a.debug("GLOBAL_CHAT","Messages marked as read",{messageCount:e.length,timestamp:new Date().toISOString()})},incrementUnread:()=>{t(e=>({hasUnreadMessages:!0,unreadCount:e.unreadCount+1})),a.debug("GLOBAL_CHAT","Unread count incremented",{newCount:s().unreadCount,timestamp:new Date().toISOString()})},resetUnread:()=>{t({hasUnreadMessages:!1,unreadCount:0}),a.debug("GLOBAL_CHAT","Unread count reset",{timestamp:new Date().toISOString()})},setChatState:e=>{t({chatState:e}),a.debug("GLOBAL_CHAT","Chat state updated",{stateType:e.type,timestamp:new Date().toISOString()})},setIsInStep2:e=>{t({isInStep2:e}),a.debug("GLOBAL_CHAT","Step 2 status updated",{isInStep2:e,timestamp:new Date().toISOString()})},setHasStep2Intro:e=>{t({hasStep2Intro:e}),a.debug("GLOBAL_CHAT","Step 2 intro status updated",{hasIntro:e,timestamp:new Date().toISOString()})},showNotification:e=>{const r={...e,isVisible:!0};t({currentNotification:r}),a.debug("GLOBAL_CHAT","Notification shown",{notificationId:e.id,mode:e.mode,timestamp:new Date().toISOString()})},hideNotification:()=>{const e=s().currentNotification;e&&(t({currentNotification:null}),a.debug("GLOBAL_CHAT","Notification hidden",{notificationId:e.id,timestamp:new Date().toISOString()}))}}),{name:"global-chat-store",storage:te(()=>localStorage),partialize:t=>({currentMode:t.currentMode,position:t.position,closeOnNavigation:t.closeOnNavigation,messages:t.messages.slice(-50)})})),et={training:{id:"training",displayName:"Coach Training",systemPrompt:`Tu es un coach sportif expert et ultra-motivant. Tu accompagnes l'utilisateur pendant sa séance en lui donnant des conseils techniques précis et motivants.

## Ton de Communication:
Tu parles toujours en tant que COACH EXTERNE (jamais de "nous"). Tu es là pour guider, corriger, motiver et pousser l'utilisateur à se dépasser.

Exemples: "Concentre-toi sur ta posture", "Tu peux aller plus loin", "Je vois que tu progresses", "Fais attention à..."

## Instructions:
- Reste concis (2-3 phrases max), énergique et pratique
- Tutoie l'utilisateur
- Donne des conseils techniques concrets
- Motive et challenge sans devenir le "twin" de l'utilisateur`,capabilities:{voice:!0,suggestions:!0,exerciseFeedback:!0},color:"#FF6B35",icon:"Dumbbell"},nutrition:{id:"nutrition",displayName:"Coach Nutrition",systemPrompt:`Tu es le coach nutrition de l'utilisateur dans TwinForge. Tu formes un duo avec lui pour optimiser son alimentation.

## Modes de Communication:

### Mode TWIN (par défaut) - Utiliser "NOUS":
Utilise "nous" quand:
- L'utilisateur planifie ses repas, réfléchit à son alimentation
- Il évalue sa progression nutritionnelle
- Il est en mode co-pilotage et partage ses réflexions
- Il célèbre des victoires ("J'ai bien mangé aujourd'hui")

Exemples: "Nous avons fait de bons choix aujourd'hui", "Concentrons-nous sur les protéines", "Notre équilibre nutritionnel s'améliore"

### Mode COACH - Se détacher:
Bascule en coach externe quand:
- L'utilisateur demande des explications techniques ("Comment calculer mes macros?")
- Il a besoin de corrections ou conseils précis
- Il exprime du stress ou de la confusion
- Des explications pédagogiques sont nécessaires

Exemples: "Je t'explique comment...", "Voici ce que je te conseille...", "Laisse-moi t'aider à comprendre..."

## Instructions:
- Détecte l'intent et adapte ton mode
- Reste pédagogique, positif et pratique
- Explique clairement les concepts nutritionnels`,capabilities:{voice:!0,suggestions:!0,mealAnalysis:!0},color:"#10B981",icon:"Utensils"},fasting:{id:"fasting",displayName:"Coach Jeûne",systemPrompt:`Tu es le coach jeûne de l'utilisateur dans TwinForge. Tu formes un duo avec lui pendant sa session de jeûne.

## Modes de Communication:

### Mode TWIN (par défaut) - Utiliser "NOUS":
Utilise "nous" quand:
- L'utilisateur partage ses sensations pendant le jeûne
- Il planifie ou réfléchit à sa stratégie de jeûne
- Il est motivé et en mode co-pilotage
- Il célèbre des étapes ("J'ai tenu 16h!")

Exemples: "Nous tenons bon", "Nous avons déjà atteint 12h", "Restons concentrés sur notre objectif"

### Mode COACH - Se détacher:
Bascule en coach externe quand:
- L'utilisateur exprime du stress, de la peur ou de la faim intense
- Il demande des conseils techniques ("Comment gérer la faim?")
- Il a besoin de réassurance et d'encouragements directifs
- Des explications sur les bénéfices sont demandées

Exemples: "Je te rassure, c'est normal", "Voici comment tu peux gérer...", "Je suis là pour t'accompagner"

## Instructions:
- Détecte l'état émotionnel et adapte ton mode
- Reste rassurant et motivant
- Propose des stratégies concrètes`,capabilities:{voice:!0,suggestions:!0,fastingTips:!0},color:"#F59E0B",icon:"Timer"},general:{id:"general",displayName:"TwinCoach",systemPrompt:`Tu es TwinCoach, le compagnon de progression de l'utilisateur dans TwinForge. Tu formes un duo avec lui pour atteindre ses objectifs wellness.

## Modes de Communication:

### Mode TWIN (par défaut) - Utiliser "NOUS":
Utilise la première personne du pluriel quand:
- L'utilisateur planifie, réfléchit, évalue sa progression
- Il célèbre des victoires ou partage des réflexions
- Il est motivé et en mode co-pilotage
- Il parle d'objectifs communs ou d'actions quotidiennes

Exemples: "Nous avons bien progressé aujourd'hui", "Nous devons nous concentrer sur...", "Regardons ensemble notre évolution"

### Mode COACH - Se détacher du "NOUS":
Bascule en coach externe quand:
- L'utilisateur demande explicitement des explications, corrections ou conseils techniques
- Il exprime du stress, de la peur ou a besoin de réassurance
- Il demande "comment faire", "explique-moi", "corrige-moi"
- Des conseils objectifs et directifs sont nécessaires

Exemples: "Je te conseille de...", "Voici comment tu peux...", "Je suis là pour te guider"

## Instructions:
- Détecte automatiquement l'intent et le sentiment de l'utilisateur
- Transitions naturelles entre les deux modes
- Reste amical, clair et proactif
- Guide vers les bonnes fonctionnalités de l'app`,capabilities:{voice:!0,suggestions:!0,navigation:!0},color:"#18E3FF",icon:"MessageSquare"},"body-scan":{id:"body-scan",displayName:"Coach Corps",systemPrompt:`Tu es le coach corporel de l'utilisateur dans TwinForge. Tu formes un duo avec lui pour analyser et améliorer sa condition physique.

## Modes de Communication:

### Mode TWIN (par défaut) - Utiliser "NOUS":
Utilise "nous" quand:
- L'utilisateur découvre ses résultats et réfléchit à sa progression
- Il évalue son évolution corporelle
- Il est en mode analyse et projection
- Il célèbre des améliorations

Exemples: "Nous avons progressé sur la posture", "Analysons ensemble notre évolution", "Notre condition physique s'améliore"

### Mode COACH - Se détacher:
Bascule en coach externe quand:
- L'utilisateur demande des conseils techniques précis sur la posture ou l'alignement
- Il a besoin d'explications sur les résultats du scan
- Des corrections ou ajustements sont nécessaires
- Il demande "comment améliorer...", "que dois-je faire..."

Exemples: "Je te conseille d'ajuster...", "Voici ce que tes résultats montrent...", "Pour améliorer ta posture, je te recommande..."

## Instructions:
- Détecte l'intent et adapte ton mode
- Reste expert et bienveillant
- Explique clairement les résultats
- Propose des améliorations concrètes`,capabilities:{voice:!0,suggestions:!0},color:"#A855F7",icon:"Scan"}},Ot=O()(H((t,s)=>({isPanelOpen:!1,communicationMode:"text",isVoiceOnlyMode:!1,currentInputMode:"text",currentMode:"general",modeConfigs:et,conversationId:null,messages:[],currentTranscription:"",voiceState:"idle",isRecording:!1,isProcessing:!1,isSpeaking:!1,showTranscript:!1,showReadyPrompt:!1,isTyping:!1,hasUnreadMessages:!1,unreadCount:0,lastReadMessageId:null,visualization:{frequencies:[],volume:0,isActive:!1},closeOnNavigation:!0,isInStep2:!1,hasStep2Intro:!1,errorMessage:"",currentNotification:null,openPanel:e=>{const r=e||s().currentMode;t({isPanelOpen:!0,currentMode:r}),s().markAsRead(),s().hideNotification(),a.info("UNIFIED_COACH","Panel opened",{mode:r,communicationMode:s().communicationMode,timestamp:new Date().toISOString()})},closePanel:()=>{t({isPanelOpen:!1}),s().voiceState==="listening"&&s().stopListening(),a.info("UNIFIED_COACH","Panel closed",{mode:s().currentMode,timestamp:new Date().toISOString()})},togglePanel:()=>{const{isPanelOpen:e}=s();e?s().closePanel():s().openPanel()},setCommunicationMode:e=>{const r=s().communicationMode;t({communicationMode:e}),e==="text"?t({voiceState:"idle",isRecording:!1,showReadyPrompt:!1,currentTranscription:""}):e==="voice"&&t({isTyping:!1}),a.info("UNIFIED_COACH","Communication mode changed",{from:r,to:e,timestamp:new Date().toISOString()})},toggleCommunicationMode:()=>{const e=s().communicationMode;s().setCommunicationMode(e==="text"?"voice":"text")},setMode:e=>{const r=s().currentMode;t({currentMode:e}),a.info("UNIFIED_COACH","Chat mode changed",{from:r,to:e,timestamp:new Date().toISOString()})},startConversation:(e,r)=>{const n=Q();t({conversationId:n,currentMode:e,messages:[],isPanelOpen:!0}),a.info("UNIFIED_COACH","Conversation started",{conversationId:n,mode:e,hasContextData:!!r,timestamp:new Date().toISOString()})},endConversation:()=>{const{conversationId:e,currentMode:r}=s();t({conversationId:null,isTyping:!1,isRecording:!1,isProcessing:!1,isSpeaking:!1,voiceState:"idle"}),a.info("UNIFIED_COACH","Conversation ended",{conversationId:e,mode:r,messageCount:s().messages.length,timestamp:new Date().toISOString()})},addMessage:e=>{const r={...e,id:Q(),timestamp:new Date};t(n=>({messages:[...n.messages,r]})),r.role==="coach"&&!s().isPanelOpen&&s().incrementUnread(),a.debug("UNIFIED_COACH","Message added",{messageId:r.id,role:r.role,type:r.type,mode:s().currentMode,timestamp:new Date().toISOString()})},clearMessages:()=>{t({messages:[]}),a.debug("UNIFIED_COACH","Messages cleared",{mode:s().currentMode,timestamp:new Date().toISOString()})},setCurrentTranscription:e=>{t({currentTranscription:e})},setVoiceState:e=>{t({voiceState:e}),a.debug("UNIFIED_COACH","Voice state changed",{state:e,timestamp:new Date().toISOString()})},setRecording:e=>{t({isRecording:e})},setProcessing:e=>{t({isProcessing:e})},setSpeaking:e=>{t({isSpeaking:e})},setShowTranscript:e=>{t({showTranscript:e})},toggleTranscript:()=>{t(e=>({showTranscript:!e.showTranscript}))},setShowReadyPrompt:e=>{t({showReadyPrompt:e})},startListening:()=>{t({voiceState:"listening",isRecording:!0}),a.info("UNIFIED_COACH","Started listening",{timestamp:new Date().toISOString()})},stopListening:()=>{t({voiceState:"idle",isRecording:!1,currentTranscription:""}),a.info("UNIFIED_COACH","Stopped listening",{timestamp:new Date().toISOString()})},setTyping:e=>{t({isTyping:e})},markAsRead:()=>{const e=s().messages,r=e[e.length-1];t({hasUnreadMessages:!1,unreadCount:0,lastReadMessageId:r?.id||null}),a.debug("UNIFIED_COACH","Messages marked as read",{messageCount:e.length,timestamp:new Date().toISOString()})},incrementUnread:()=>{t(e=>({hasUnreadMessages:!0,unreadCount:e.unreadCount+1})),a.debug("UNIFIED_COACH","Unread count incremented",{newCount:s().unreadCount,timestamp:new Date().toISOString()})},resetUnread:()=>{t({hasUnreadMessages:!1,unreadCount:0}),a.debug("UNIFIED_COACH","Unread count reset",{timestamp:new Date().toISOString()})},updateVisualization:e=>{t(r=>({visualization:{...r.visualization,...e}}))},setCloseOnNavigation:e=>{t({closeOnNavigation:e})},setIsInStep2:e=>{t({isInStep2:e}),a.debug("UNIFIED_COACH","Step 2 status updated",{isInStep2:e,timestamp:new Date().toISOString()})},setHasStep2Intro:e=>{t({hasStep2Intro:e}),a.debug("UNIFIED_COACH","Step 2 intro status updated",{hasIntro:e,timestamp:new Date().toISOString()})},setError:e=>{t({errorMessage:e}),a.error("UNIFIED_COACH","Error set",{message:e,timestamp:new Date().toISOString()})},clearError:()=>{t({errorMessage:""})},showNotification:e=>{const r={...e,isVisible:!0};t({currentNotification:r}),a.debug("UNIFIED_COACH","Notification shown",{notificationId:e.id,mode:e.mode,timestamp:new Date().toISOString()})},hideNotification:()=>{const e=s().currentNotification;e&&(t({currentNotification:null}),a.debug("UNIFIED_COACH","Notification hidden",{notificationId:e.id,timestamp:new Date().toISOString()}))},enterVoiceOnlyMode:()=>{t({isVoiceOnlyMode:!0,communicationMode:"voice",currentInputMode:"realtime"}),a.info("UNIFIED_COACH","Entered voice-only mode (keeping panel open)",{timestamp:new Date().toISOString(),isPanelOpen:s().isPanelOpen})},exitVoiceOnlyMode:()=>{t({isVoiceOnlyMode:!1,currentInputMode:"text"}),a.info("UNIFIED_COACH","Exited voice-only mode (panel state unchanged)",{timestamp:new Date().toISOString(),isPanelOpen:s().isPanelOpen})},setInputMode:e=>{t({currentInputMode:e}),a.debug("UNIFIED_COACH","Input mode changed",{mode:e,timestamp:new Date().toISOString()})}}),{name:"unified-coach-store",storage:te(()=>localStorage),partialize:t=>({currentMode:t.currentMode,communicationMode:t.communicationMode,currentInputMode:t.currentInputMode,closeOnNavigation:t.closeOnNavigation,showTranscript:t.showTranscript,messages:t.messages.slice(-50)})})),tt={week:"last7Days",month:"last30Days",quarter:"last3Months"},Dt=O((t,s)=>({selectedPeriod:"week",setSelectedPeriod:e=>{t({selectedPeriod:e})},getApiPeriod:()=>{const{selectedPeriod:e}=s();return tt[e]}})),ce=10,w=[{id:"photo",title:"Capture Photos",subtitle:"Capturez vos ingrédients disponibles",icon:"Camera",color:"#EC4899",startProgress:0},{id:"analyze",title:"Analyse IA",subtitle:"La Forge Spatiale analyse vos ingrédients",icon:"Zap",color:"#18E3FF",startProgress:33},{id:"complement",title:"Suggestions IA",subtitle:"Ajoutez des ingrédients complémentaires recommandés",icon:"Plus",color:"#8B5CF6",startProgress:66},{id:"validation",title:"Validation Client",subtitle:"Confirmez et ajustez les ingrédients détectés",icon:"Edit",color:"#F59E0B",startProgress:100},{id:"generating_recipes",title:"Génération IA",subtitle:"La Forge Spatiale crée vos recettes personnalisées",icon:"Zap",color:"#10B981",startProgress:120},{id:"recipes",title:"Recettes Générées",subtitle:"Découvrez vos recettes personnalisées",icon:"ChefHat",color:"#F59E0B",startProgress:140}],rt="twinforge:fridge-scan:pipeline",nt=(t,s)=>({startProgressSimulation:(e,r,n)=>{const i=s();i.stopProgressSimulation(),a.info("FRIDGE_SCAN_PIPELINE","Starting progress simulation",{sessionId:i.currentSessionId,stepsCount:e.length,phaseStartPercentage:r,phaseEndPercentage:n,timestamp:new Date().toISOString()});let l=0;t({simulatedLoadingStep:0,simulatedScanProgress:0,simulatedOverallProgress:r});const o=()=>{if(l<e.length){const c=e[l];t({simulatedLoadingStep:l});const u=100/(c.duration/100);let p=0;const g=setInterval(()=>{p+=u;const d=Math.min(100,p),S=1/e.length,v=l/e.length*100;(l+1)/e.length*100;const b=v+d/100*S*100,M=r+b/100*(n-r);if(t({simulatedScanProgress:d,simulatedOverallProgress:Math.min(n,M)}),d>=100){clearInterval(g),l++;const q=setTimeout(()=>{o()},200);t({progressTimeoutId:q})}},100);t({progressIntervalId:g})}else t({simulatedScanProgress:100,simulatedOverallProgress:n,progressIntervalId:null,progressTimeoutId:null}),a.info("FRIDGE_SCAN_PIPELINE","Progress simulation completed",{sessionId:i.currentSessionId,finalOverallProgress:n,timestamp:new Date().toISOString()})};o()},stopProgressSimulation:()=>{const e=s();e.progressIntervalId&&clearInterval(e.progressIntervalId),e.progressTimeoutId&&clearTimeout(e.progressTimeoutId),t({progressIntervalId:null,progressTimeoutId:null,simulatedLoadingStep:0,simulatedScanProgress:0}),a.debug("FRIDGE_SCAN_PIPELINE","Progress simulation stopped",{sessionId:e.currentSessionId,timestamp:new Date().toISOString()})}}),st=(t,s)=>({addCapturedPhotos:e=>{const r=s().capturedPhotos;a.debug("FRIDGE_SCAN_PIPELINE","Adding captured photos",{sessionId:s().currentSessionId,currentPhotosCount:r.length,newPhotosCount:e.length,timestamp:new Date().toISOString()});const n=w.find(i=>i.id==="analyze");t({capturedPhotos:[...s().capturedPhotos,...e],simulatedOverallProgress:n?.startProgress||20}),a.debug("FRIDGE_SCAN_PIPELINE","Captured photos updated",{sessionId:s().currentSessionId,totalPhotosCount:s().capturedPhotos.length,timestamp:new Date().toISOString()}),a.info("FRIDGE_SCAN_PIPELINE","Photos uploaded",{sessionId:s().currentSessionId,photosCount:e.length,timestamp:new Date().toISOString()})},removeCapturedPhoto:e=>{const r=s(),n=r.capturedPhotos.filter((i,l)=>l!==e);t({capturedPhotos:n}),a.debug("FRIDGE_SCAN_PIPELINE","Photo removed",{sessionId:r.currentSessionId,photoIndex:e,remainingPhotos:n.length,timestamp:new Date().toISOString()})}}),at=(t,s)=>({processVisionResults:(e,r)=>{s().stopProgressSimulation();const n=w.find(l=>l.id==="validation");let i="validation";e.length<ce&&r&&r.length>0&&(i="complement"),t({rawDetectedItems:e,userEditedInventory:e,suggestedComplementaryItems:r||[],currentStep:i,loadingState:"idle",loadingMessage:"Analyse terminée avec succès",simulatedOverallProgress:n?.startProgress||40,simulatedScanProgress:0,simulatedLoadingStep:0}),s().goToStep(i),a.info("FRIDGE_SCAN_PIPELINE","Vision results processed",{sessionId:s().currentSessionId,itemsDetected:e.length,suggestedItemsCount:r?.length||0,timestamp:new Date().toISOString()})},updateInventory:async e=>{t({userEditedInventory:e}),a.debug("FRIDGE_SCAN_PIPELINE","Inventory updated by user",{sessionId:s().currentSessionId,inventoryCount:e.length,timestamp:new Date().toISOString()}),await s().saveSessionToSupabase()},setSuggestedComplementaryItems:e=>{t({suggestedComplementaryItems:e}),a.debug("FRIDGE_SCAN_PIPELINE","Suggested complementary items set",{sessionId:s().currentSessionId,suggestedItemsCount:e.length,timestamp:new Date().toISOString()})},addSelectedComplementaryItems:async e=>{const n=[...s().userEditedInventory,...e];t({userEditedInventory:n}),a.info("FRIDGE_SCAN_PIPELINE","Selected complementary items added to inventory",{sessionId:s().currentSessionId,addedItemsCount:e.length,totalInventoryCount:n.length,timestamp:new Date().toISOString()}),await s().saveSessionToSupabase()}}),it=(t,s)=>({_triggerImageGenerationForRecipes:async(e,r)=>{if(!e.length)return;const i=s().recipeCandidates.map(c=>e.find(p=>p.id===c.id)?{...c,isGeneratingImage:!0}:c);t({recipeCandidates:i});const{supabase:l}=await A(async()=>{const{supabase:c}=await import("./page-fridge-Cp-W9isk.js").then(u=>u.k);return{supabase:c}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])),{data:{session:o}}=await l.auth.getSession();if(!o?.access_token){a.error("FRIDGE_SCAN_PIPELINE","No authenticated session for image generation",{sessionId:r,timestamp:new Date().toISOString()});return}a.info("FRIDGE_SCAN_PIPELINE","Starting background image generation for recipes",{sessionId:r,recipeCount:e.length,recipeIds:e.map(c=>c.id),timestamp:new Date().toISOString()});for(const c of e)try{const u=`recipe-${c.id}-${Date.now()}`,p={user_id:o.user.id,recipe_id:c.id,image_signature:u,recipe_details:{session_id:r,title:c.title,description:c.description||"",ingredients:c.ingredients.slice(0,5).map(d=>d.name),dietary_tags:c.dietary_tags}},g=await fetch("https://kwipydbtjagypocpvbwn.supabase.co/functions/v1/image-generator",{method:"POST",headers:{Authorization:`Bearer ${o.access_token}`,"Content-Type":"application/json"},body:JSON.stringify(p)});if(g.ok){const d=await g.json();a.info("FRIDGE_SCAN_PIPELINE","Image generation initiated successfully",{sessionId:r,recipeId:c.id,imageSignature:u,imageUrl:d.image_url,timestamp:new Date().toISOString()}),s().updateRecipeImageUrlInCandidates(c.id,d.image_url,!1)}else{const d=await g.text();throw new Error(`HTTP error! status: ${g.status}, message: ${d}`)}}catch(u){a.error("FRIDGE_SCAN_PIPELINE","Image generation failed for recipe",{sessionId:r,recipeId:c.id,recipeTitle:c.title,error:u instanceof Error?u.message:"Unknown error",errorDetails:u instanceof Error&&u.message.includes("HTTP error!")?u.message:void 0,timestamp:new Date().toISOString()}),s().updateRecipeImageUrlInCandidates(c.id,void 0,!1,!0)}},updateRecipeImageUrlInCandidates:(e,r,n=!1,i=!1)=>{const o=s().recipeCandidates.map(c=>c.id===e?{...c,imageUrl:r,isGeneratingImage:n,imageGenerationError:i}:c);t({recipeCandidates:o})},generateRecipes:async()=>{const e=s();a.info("FRIDGE_SCAN_PIPELINE","Starting generateRecipes - Initial state",{sessionId:e.currentSessionId,userEditedInventoryCount:e.userEditedInventory?.length||0,userEditedInventory:e.userEditedInventory,timestamp:new Date().toISOString()});let r=e.userEditedInventory;if(!r||r.length===0){a.info("FRIDGE_SCAN_PIPELINE","No userEditedInventory found, attempting to get from meal plan store",{sessionId:e.currentSessionId,timestamp:new Date().toISOString()});try{const{useMealPlanStore:i}=await A(async()=>{const{useMealPlanStore:c}=await Promise.resolve().then(()=>ie);return{useMealPlanStore:c}},void 0),l=i.getState();a.info("FRIDGE_SCAN_PIPELINE","Meal plan store state retrieved",{sessionId:e.currentSessionId,selectedInventoryId:l.selectedInventoryId,availableInventoriesCount:l.availableInventories?.length||0,availableInventories:l.availableInventories?.map(c=>({id:c.id,itemCount:c.inventory_final?.length||0,createdAt:c.createdAt})),timestamp:new Date().toISOString()});const o=l.selectedInventoryId&&l.availableInventories?l.availableInventories.find(c=>c.id===l.selectedInventoryId):null;o&&o.inventory_final&&o.inventory_final.length>0?(r=o.inventory_final,t({userEditedInventory:r}),a.info("FRIDGE_SCAN_PIPELINE","Using inventory from meal plan store",{sessionId:e.currentSessionId,selectedInventoryId:l.selectedInventoryId,inventoryCount:r.length,inventoryItems:r.map(c=>({name:c.name,category:c.category,quantity:c.quantity})),timestamp:new Date().toISOString()})):a.warn("FRIDGE_SCAN_PIPELINE","Meal plan store has no selected inventory",{sessionId:e.currentSessionId,selectedInventoryId:l.selectedInventoryId,availableInventoriesCount:l.availableInventories?.length||0,foundSelectedInventory:!!o,selectedInventoryLength:o?.inventory_final?.length||0,timestamp:new Date().toISOString()})}catch(i){a.warn("FRIDGE_SCAN_PIPELINE","Failed to get inventory from meal plan store",{sessionId:e.currentSessionId,error:i instanceof Error?i.message:"Unknown error",errorStack:i instanceof Error?i.stack:void 0,timestamp:new Date().toISOString()})}}if(a.info("FRIDGE_SCAN_PIPELINE","Final inventory state before validation",{sessionId:e.currentSessionId,inventoryToUseExists:!!r,inventoryToUseCount:r?.length||0,inventoryToUse:r?.map(i=>({name:i.name,category:i.category,quantity:i.quantity,freshnessScore:i.freshnessScore})),timestamp:new Date().toISOString()}),!r||r.length===0){const i="Aucun ingrédient disponible pour générer des recettes. Veuillez d'abord scanner votre frigo ou sélectionner un inventaire.";throw a.error("FRIDGE_SCAN_PIPELINE","No inventory available for recipe generation",{sessionId:e.currentSessionId,userEditedInventoryCount:e.userEditedInventory.length,finalInventoryToUseCount:r?.length||0,timestamp:new Date().toISOString()}),t({loadingState:"idle",loadingMessage:"",recipeCandidates:[]}),new Error(i)}const n=w.find(i=>i.id==="generating_recipes");t({currentStep:"generating_recipes",loadingState:"generating",loadingMessage:"La Forge Spatiale crée vos recettes personnalisées...",simulatedOverallProgress:n?.startProgress||60});try{a.info("FRIDGE_SCAN_PIPELINE","Starting streaming recipe generation",{sessionId:e.currentSessionId,inventoryCount:r.length,aiModel:"gpt-4o-mini",streamingEnabled:!0,timestamp:new Date().toISOString()});const i=w.find(_=>_.id==="recipes");t({recipeCandidates:[],currentStep:"recipes",loadingState:"streaming",loadingMessage:"Génération des recettes en cours...",simulatedOverallProgress:i?.startProgress||80,simulatedScanProgress:0,simulatedLoadingStep:0}),s().stopProgressSimulation();const{useUserStore:l}=await A(async()=>{const{useUserStore:_}=await Promise.resolve().then(()=>ae);return{useUserStore:_}},void 0),o=l.getState().profile,c=l.getState().session?.user?.id;if(!c)throw new Error("User must be authenticated to generate recipes");const{supabase:u}=await A(async()=>{const{supabase:_}=await import("./page-fridge-Cp-W9isk.js").then(E=>E.k);return{supabase:_}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]));let p=[];try{const{data:_}=await u.from("recipe_sessions").select(`
            recipes (
              title,
              ingredients
            )
          `).eq("user_id",c).order("created_at",{ascending:!1}).limit(20);_&&(p=_.flatMap(E=>E.recipes||[]).map(E=>({title:E.title,main_ingredients:E.ingredients?.slice(0,3).map(f=>f.name)||[]})))}catch(_){a.warn("FRIDGE_SCAN_PIPELINE","Failed to fetch existing recipes",{sessionId:e.currentSessionId,error:_ instanceof Error?_.message:"Unknown error",timestamp:new Date().toISOString()})}const g={nutrition:{diet:o?.nutrition?.diet||"",allergies:o?.nutrition?.allergies||[],intolerances:o?.nutrition?.intolerances||[],budgetLevel:o?.nutrition?.budgetLevel||"medium",proteinTarget_g:o?.nutrition?.proteinTarget_g||void 0,disliked:o?.nutrition?.disliked||[]},household_details:{adults:o?.householdDetails?.adults||1,children:o?.householdDetails?.children||0,dietaryRestrictions:o?.householdDetails?.dietaryRestrictions||[]},meal_prep_preferences:{weekdayTimeMin:o?.mealPrepPreferences?.weekdayTimeMin||30,weekendTimeMin:o?.mealPrepPreferences?.weekendTimeMin||60,cookingSkill:o?.mealPrepPreferences?.cookingSkill||"intermediate",preferredMealTimes:o?.mealPrepPreferences?.preferredMealTimes||{}},kitchen_equipment:{oven:o?.kitchenEquipment?.oven??!0,stove:o?.kitchenEquipment?.stove??!0,microwave:o?.kitchenEquipment?.microwave??!0,airFryer:o?.kitchenEquipment?.airFryer??!1,slowCooker:o?.kitchenEquipment?.slowCooker??!1,blender:o?.kitchenEquipment?.blender??!1,foodProcessor:o?.kitchenEquipment?.foodProcessor??!1,standMixer:o?.kitchenEquipment?.standMixer??!1,riceCooker:o?.kitchenEquipment?.riceCooker??!1,grill:o?.kitchenEquipment?.grill??!1,steamBasket:o?.kitchenEquipment?.steamBasket??!1,pressureCooker:o?.kitchenEquipment?.pressureCooker??!1},food_preferences:{cuisines:o?.foodPreferences?.cuisines||[],ingredients:o?.foodPreferences?.ingredients||[],flavors:o?.foodPreferences?.flavors||[]},sensory_preferences:{spiceTolerance:o?.sensoryPreferences?.spiceTolerance||1,textureAversions:o?.sensoryPreferences?.textureAversions||[],temperaturePreferences:o?.sensoryPreferences?.temperaturePreferences||[]},macro_targets:{kcal:o?.macroTargets?.kcal||void 0,fiberMinG:o?.macroTargets?.fiberMinG||void 0,sugarMaxG:o?.macroTargets?.sugarMaxG||void 0,saltMaxMg:o?.macroTargets?.saltMaxMg||void 0,carbsMaxG:o?.macroTargets?.carbsMaxG||void 0,fatMinG:o?.macroTargets?.fatMinG||void 0},shopping_preferences:{frequencyPerWeek:o?.shoppingPreferences?.frequencyPerWeek||2,defaultPortionsPerMeal:o?.shoppingPreferences?.defaultPortionsPerMeal||2,batchCooking:o?.shoppingPreferences?.batchCooking||"sometimes",bias:o?.shoppingPreferences?.bias||[],preferredStores:o?.shoppingPreferences?.preferredStores||[],budgetPerWeek:o?.shoppingPreferences?.budgetPerWeek||void 0},user_identity:{sex:o?.sex||"male",height_cm:o?.height_cm||175,weight_kg:o?.weight_kg||70,activity_level:o?.activity_level||"moderate",objective:o?.objective||"recomp"}},d=await fetch("https://kwipydbtjagypocpvbwn.supabase.co/functions/v1/recipe-generator",{method:"POST",headers:{Authorization:"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt3aXB5ZGJ0amFneXBvY3B2YnduIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ2ODg0MjIsImV4cCI6MjA3MDI2NDQyMn0.IS5IdKbmnGtgU_AaGYtUgX3ewaNpsiSAui5kbFV31_U","Content-Type":"application/json"},body:JSON.stringify({inventory_final:r.map(_=>({name:_.name,category:_.category,quantity:_.quantity,freshness:_.freshnessScore>70?"Excellent":_.freshnessScore>40?"Bon":"À utiliser rapidement"})),user_preferences:g,filters:{},user_id:c,existing_recipes:p})});if(!d.ok)throw new Error(`HTTP error! status: ${d.status}`);if(!d.body)throw new Error("Response body is null");const S=d.body.getReader(),v=new TextDecoder;let b="",M=0;const q=(_,E)=>{if(_==="skeleton")try{const P=JSON.parse(E).recipe_count||4;a.info("FRIDGE_SCAN_PIPELINE","Received skeleton count",{sessionId:e.currentSessionId,skeletonCount:P,timestamp:new Date().toISOString()});const D=Array.from({length:P},(N,y)=>({id:`placeholder-${y}-${Date.now()}`,sessionId:e.currentSessionId,title:"",description:"",ingredients:[],instructions:[],prepTimeMin:0,cookTimeMin:0,servings:0,dietaryTags:[],nutritionalInfo:{calories:0,protein:0,carbs:0,fat:0},imageUrl:void 0,imageSignature:void 0,reasons:[],createdAt:new Date().toISOString(),status:"loading",isGeneratingImage:!0}));t({recipeCandidates:D})}catch(f){a.error("FRIDGE_SCAN_PIPELINE","Error parsing skeleton event",{sessionId:e.currentSessionId,error:f instanceof Error?f.message:"Unknown error",timestamp:new Date().toISOString()})}else if(_==="recipe")try{const f=E.trim(),P=f.indexOf("{"),D=f.lastIndexOf("}");if(P===-1||D===-1||P>=D)throw new Error("Invalid JSON structure in recipe data");const N=f.substring(P,D+1),y=JSON.parse(N),h={id:y.id||crypto.randomUUID(),sessionId:e.currentSessionId,title:y.title,description:y.description,ingredients:y.ingredients||[],instructions:y.instructions||[],prepTimeMin:y.prep_time_min||0,cookTimeMin:y.cook_time_min||0,servings:y.servings||2,dietaryTags:y.dietary_tags||[],nutritionalInfo:y.nutritional_info||{},imageUrl:void 0,imageSignature:y.image_signature,reasons:y.reasons||[],createdAt:new Date().toISOString(),status:"ready",isGeneratingImage:!1};M++,a.info("FRIDGE_SCAN_PIPELINE","Received recipe via SSE",{sessionId:e.currentSessionId,recipeId:h.id,recipeTitle:h.title,totalReceived:M,timestamp:new Date().toISOString()});const T=s().recipeCandidates,V=T.findIndex(F=>F.status==="loading"&&F.title==="");let k;V!==-1?(k=[...T],k[V]={...k[V],...h,status:"ready",isGeneratingImage:!0}):k=[...T,h],t({recipeCandidates:k}),s()._triggerImageGenerationForRecipes([h],e.currentSessionId)}catch(f){a.error("FRIDGE_SCAN_PIPELINE","Error parsing recipe event",{sessionId:e.currentSessionId,error:f instanceof Error?f.message:"Unknown error",rawData:E,timestamp:new Date().toISOString()})}else if(_==="complete")try{const f=JSON.parse(E);a.info("FRIDGE_SCAN_PIPELINE","Recipe generation completed via SSE",{sessionId:e.currentSessionId,totalRecipesReceived:M,processingTimeMs:f.processing_time_ms,costUsd:f.cost_usd,cacheHit:f.cache_hit,aiModel:"gpt-4o-mini",inputTokens:f.input_tokens,outputTokens:f.output_tokens,timestamp:new Date().toISOString()}),t({loadingState:"idle",loadingMessage:"",isActive:!1})}catch(f){a.error("FRIDGE_SCAN_PIPELINE","Error parsing complete event",{sessionId:e.currentSessionId,error:f instanceof Error?f.message:"Unknown error",timestamp:new Date().toISOString()})}else if(_==="error")try{const f=JSON.parse(E);throw a.error("FRIDGE_SCAN_PIPELINE","SSE error event received",{sessionId:e.currentSessionId,error:f.error||"Unknown SSE error",timestamp:new Date().toISOString()}),t({loadingState:"idle",loadingMessage:"",recipeCandidates:[]}),new Error(f.error||"Recipe generation failed via SSE")}catch(f){throw a.error("FRIDGE_SCAN_PIPELINE","Error parsing SSE error event",{sessionId:e.currentSessionId,error:f instanceof Error?f.message:"Unknown error",timestamp:new Date().toISOString()}),new Error("Recipe generation failed")}};a.info("FRIDGE_SCAN_PIPELINE","SSE connection opened",{sessionId:e.currentSessionId,timestamp:new Date().toISOString()});try{for(;;){const{done:_,value:E}=await S.read();if(_)break;b+=v.decode(E,{stream:!0});const f=b.split(`
`);b=f.pop()||"";let P="",D="";for(const N of f)N.startsWith("event: ")?P=N.slice(7).trim():N.startsWith("data: ")?D=N.slice(6):N===""&&P&&D&&(q(P,D),P="",D="")}}catch(_){throw a.error("FRIDGE_SCAN_PIPELINE","Stream reading error",{sessionId:e.currentSessionId,error:_ instanceof Error?_.message:"Unknown stream error",timestamp:new Date().toISOString()}),t({loadingState:"idle",loadingMessage:"",recipeCandidates:[]}),new Error("Failed to read recipe generation stream")}finally{S.releaseLock()}}catch(i){throw a.error("FRIDGE_SCAN_PIPELINE","Recipe generation failed",{error:i instanceof Error?i.message:"Unknown error",sessionId:e.currentSessionId,costUsd:0,aiModel:"gpt-4o-mini",timestamp:new Date().toISOString()}),t({loadingState:"idle",loadingMessage:"",recipeCandidates:[]}),i}}}),ot=(t,s)=>({...it(t,s)}),lt=(t,s)=>({saveSessionToSupabase:async()=>{const e=s();if(!e.currentSessionId){a.warn("FRIDGE_SCAN_PIPELINE","Cannot save session: no session ID");return}try{const{useUserStore:r}=await A(async()=>{const{useUserStore:c}=await Promise.resolve().then(()=>ae);return{useUserStore:c}},void 0),n=r.getState().session?.user?.id;if(!n){a.warn("FRIDGE_SCAN_PIPELINE","Cannot save session: no user ID");return}const{supabase:i}=await A(async()=>{const{supabase:c}=await import("./page-fridge-Cp-W9isk.js").then(u=>u.k);return{supabase:c}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])),l={session_id:e.currentSessionId,user_id:n,stage:e.currentStep,captured_photos:e.capturedPhotos,raw_detected_items:e.rawDetectedItems,user_edited_inventory:e.userEditedInventory,suggested_complementary_items:e.suggestedComplementaryItems,recipe_candidates:e.recipeCandidates,selected_recipes:e.selectedRecipes,meal_plan:e.mealPlan,metadata:{simulatedOverallProgress:e.simulatedOverallProgress,loadingState:e.loadingState},completed:e.simulatedOverallProgress>=100,updated_at:new Date().toISOString()},{error:o}=await i.from("fridge_scan_sessions").upsert(l,{onConflict:"session_id"});if(o){if(o.code==="PGRST205"||o.message?.includes("does not exist")){a.debug("FRIDGE_SCAN_PIPELINE","fridge_scan_sessions table not found, skipping save");return}throw o}a.debug("FRIDGE_SCAN_PIPELINE","Session saved to Supabase",{sessionId:e.currentSessionId,stage:e.currentStep,itemsCount:e.userEditedInventory.length})}catch(r){a.warn("FRIDGE_SCAN_PIPELINE","Failed to save session to Supabase",{error:r instanceof Error?r.message:"Unknown error",sessionId:e.currentSessionId})}},startScan:async()=>{const e=crypto.randomUUID();a.info("FRIDGE_SCAN_PIPELINE","Force resetting pipeline before new scan",{previousStep:s().currentStep,previousSessionId:s().currentSessionId,wasActive:s().isActive,timestamp:new Date().toISOString()});const r=w.find(n=>n.id==="photo");t({currentStep:"photo",isActive:!0,currentSessionId:e,simulatedOverallProgress:r?.startProgress||0,capturedPhotos:[],rawDetectedItems:[],userEditedInventory:[],recipeCandidates:[],selectedRecipes:[],loadingState:"idle",loadingMessage:""}),a.info("FRIDGE_SCAN_PIPELINE","Fridge scan session started",{sessionId:e,resetComplete:!0,timestamp:new Date().toISOString()}),await s().saveSessionToSupabase()},saveRecipeSession:async()=>{const e=s();t({loadingState:"saving",loadingMessage:"Sauvegarde de votre atelier de recettes..."});try{a.info("FRIDGE_SCAN_PIPELINE","Saving recipe session",{sessionId:e.currentSessionId,selectedRecipesCount:e.selectedRecipes.length,inventoryCount:e.userEditedInventory.length,timestamp:new Date().toISOString()});const{useUserStore:r}=await A(async()=>{const{useUserStore:p}=await Promise.resolve().then(()=>ae);return{useUserStore:p}},void 0),n=r.getState().profile,i=r.getState().session?.user?.id;if(!i||!e.currentSessionId)throw new Error("User ID or session ID missing");const{supabase:l}=await A(async()=>{const{supabase:p}=await import("./page-fridge-Cp-W9isk.js").then(g=>g.k);return{supabase:p}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])),o={nutrition:n?.nutrition||{},householdDetails:n?.householdDetails||{},mealPrepPreferences:n?.mealPrepPreferences||{},kitchenEquipment:n?.kitchenEquipment||{},foodPreferences:n?.foodPreferences||{},sensoryPreferences:n?.sensoryPreferences||{},macroTargets:n?.macroTargets||{},shoppingPreferences:n?.shoppingPreferences||{}},{data:c,error:u}=await l.from("recipe_sessions").upsert({id:e.currentSessionId,user_id:i,inventory_final:e.userEditedInventory,selected_recipe_ids:e.selectedRecipes.map(p=>p.id),preferences_snapshot:o,filters_snapshot:{},status:"completed",created_at:new Date().toISOString(),updated_at:new Date().toISOString()}).select().single();if(u)throw new Error(`Failed to save session: ${u.message}`);if(e.selectedRecipes.length>0){const p=e.selectedRecipes.map(d=>({id:d.id,session_id:e.currentSessionId,title:d.title,description:d.description,ingredients:d.ingredients,instructions:d.instructions,prep_time_min:d.prepTimeMin,cook_time_min:d.cookTimeMin,servings:d.servings,dietary_tags:d.dietaryTags,nutritional_info:d.nutritionalInfo,...d.imageUrl&&{image_url:d.imageUrl},image_signature:d.imageSignature,reasons:d.reasons,created_at:d.createdAt,updated_at:d.updatedAt})),{error:g}=await l.from("recipes").upsert(p);g&&a.warn("FRIDGE_SCAN_PIPELINE","Failed to save some recipes",{error:g.message,sessionId:e.currentSessionId,recipesCount:p.length})}a.info("FRIDGE_SCAN_PIPELINE","Recipe session saved successfully",{sessionId:e.currentSessionId,savedRecipesCount:e.selectedRecipes.length,timestamp:new Date().toISOString()});try{const{useMealPlanStore:p}=await A(async()=>{const{useMealPlanStore:g}=await Promise.resolve().then(()=>ie);return{useMealPlanStore:g}},void 0);await p.getState().loadAvailableInventories(),p.getState().selectInventory(e.currentSessionId),a.info("FRIDGE_SCAN_PIPELINE","Meal plan store updated with new inventory",{sessionId:e.currentSessionId,timestamp:new Date().toISOString()})}catch(p){a.warn("FRIDGE_SCAN_PIPELINE","Failed to update meal plan store",{error:p instanceof Error?p.message:"Unknown error",sessionId:e.currentSessionId,timestamp:new Date().toISOString()})}t({loadingState:"idle",loadingMessage:"Session sauvegardée avec succès",simulatedOverallProgress:100})}catch(r){throw a.error("FRIDGE_SCAN_PIPELINE","Recipe session save failed",{error:r instanceof Error?r.message:"Unknown error",sessionId:e.currentSessionId,timestamp:new Date().toISOString()}),t({loadingState:"idle",loadingMessage:"Erreur lors de la sauvegarde"}),r}finally{s().stopProgressSimulation()}return e.currentSessionId},resetPipeline:()=>{const e=s();e.stopProgressSimulation(),a.info("FRIDGE_SCAN_PIPELINE","Resetting pipeline completely",{previousStep:e.currentStep,previousSessionId:e.currentSessionId,wasActive:e.isActive,hadCapturedPhotos:e.capturedPhotos.length,hadInventory:e.userEditedInventory.length,loadingState:e.loadingState,timestamp:new Date().toISOString()}),t({currentStep:"photo",isActive:!1,currentSessionId:null,simulatedLoadingStep:0,simulatedScanProgress:0,simulatedOverallProgress:0,progressIntervalId:null,progressTimeoutId:null,capturedPhotos:[],rawDetectedItems:[],userEditedInventory:[],loadingState:"idle",loadingMessage:""}),a.info("FRIDGE_SCAN_PIPELINE","Pipeline reset",{resetComplete:!0,newStep:"photo",newSessionId:null,allDataCleared:!0,timestamp:new Date().toISOString()})},resumePipeline:async()=>{const e=s();a.info("FRIDGE_SCAN_PIPELINE","Resuming pipeline from persisted state",{currentSessionId:e.currentSessionId,currentStep:e.currentStep,isActive:e.isActive,hasInventory:e.userEditedInventory.length>0,timestamp:new Date().toISOString()});let r="photo";e.userEditedInventory.length>0?r="validation":e.suggestedComplementaryItems.length>0&&e.rawDetectedItems.length<ce?r="complement":e.rawDetectedItems.length>0?r="validation":e.capturedPhotos.length>0&&(r="analyze");const n=w.find(i=>i.id===r);if(t({isActive:!0,currentStep:r,simulatedOverallProgress:n?.startProgress||0,loadingState:"idle",loadingMessage:""}),e.currentSessionId&&e.userEditedInventory.length>0)try{const{useMealPlanStore:i}=await A(async()=>{const{useMealPlanStore:l}=await Promise.resolve().then(()=>ie);return{useMealPlanStore:l}},void 0);await i.getState().loadAvailableInventories(),i.getState().selectInventory(e.currentSessionId),a.info("FRIDGE_SCAN_PIPELINE","Meal plan store updated on resume",{sessionId:e.currentSessionId,inventoryCount:e.userEditedInventory.length,timestamp:new Date().toISOString()})}catch(i){a.warn("FRIDGE_SCAN_PIPELINE","Failed to update meal plan store on resume",{error:i instanceof Error?i.message:"Unknown error",sessionId:e.currentSessionId,timestamp:new Date().toISOString()})}a.info("FRIDGE_SCAN_PIPELINE","Pipeline resumed successfully",{sessionId:e.currentSessionId,resumedToStep:r,progress:n?.startProgress||0,timestamp:new Date().toISOString()})},startRecipeGenerationFromInventory:async e=>{try{a.info("FRIDGE_SCAN_PIPELINE","Starting recipe generation from inventory",{inventoryCount:e?.length||0,timestamp:new Date().toISOString()});const r=crypto.randomUUID();t({currentSessionId:r,isActive:!0,currentStep:"validation",userEditedInventory:e,rawDetectedItems:e,simulatedOverallProgress:66,loadingState:"idle",loadingMessage:""}),a.info("FRIDGE_SCAN_PIPELINE","Recipe generation from inventory started successfully",{sessionId:r,inventoryCount:e?.length||0,currentStep:"validation",timestamp:new Date().toISOString()})}catch(r){throw a.error("FRIDGE_SCAN_PIPELINE","Failed to start recipe generation from inventory",{error:r instanceof Error?r.message:"Unknown error",inventoryCount:e?.length||0,timestamp:new Date().toISOString()}),r}}}),ct=(t,s)=>({goToStep:async e=>{const r=w.find(i=>i.id===e),n={currentStep:e,simulatedOverallProgress:r?.startProgress||0};t(n),await s().saveSessionToSupabase()},nextStep:()=>{const e=s(),r=w.findIndex(n=>n.id===e.currentStep);r<w.length-1&&t({currentStep:w[r+1].id})},previousStep:()=>{const e=s(),r=w.findIndex(n=>n.id===e.currentStep);r>0&&t({currentStep:w[r-1].id})}}),bt=O()(H((t,s)=>({currentStep:"photo",isActive:!1,currentSessionId:null,simulatedLoadingStep:0,simulatedScanProgress:0,simulatedOverallProgress:0,progressIntervalId:null,progressTimeoutId:null,capturedPhotos:[],rawDetectedItems:[],userEditedInventory:[],suggestedComplementaryItems:[],recipeCandidates:[],selectedRecipes:[],recentSessions:[],externalGenerationTriggered:!1,mealPlan:null,loadingState:"idle",loadingMessage:"",steps:w,...nt(t,s),...st(t,s),...at(t,s),...ot(t,s),...lt(t,s),...ct(t,s),setExternalGenerationTriggered:e=>{t({externalGenerationTriggered:e})},setLoadingState:e=>{t({loadingState:e}),a.debug("FRIDGE_SCAN_PIPELINE","Loading state updated",{newLoadingState:e,timestamp:new Date().toISOString()})},setUserEditedInventory:e=>{t({userEditedInventory:e}),a.debug("FRIDGE_SCAN_PIPELINE","User edited inventory set explicitly",{inventoryCount:e.length,timestamp:new Date().toISOString()})},clearRecipeCandidates:()=>{t({recipeCandidates:[]}),a.info("FRIDGE_SCAN_PIPELINE","Recipe candidates cleared",{sessionId:s().currentSessionId,timestamp:new Date().toISOString()})},loadRecentSessions:async()=>{try{const{supabase:e}=await A(async()=>{const{supabase:o}=await import("./page-fridge-Cp-W9isk.js").then(c=>c.k);return{supabase:o}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])),{data:{user:r}}=await e.auth.getUser();if(!r){a.warn("FRIDGE_SCAN_PIPELINE","No user found, cannot load recent sessions"),t({recentSessions:[]});return}const{data:n,error:i}=await e.from("fridge_scan_sessions").select("session_id, user_id, stage, created_at, updated_at, captured_photos, raw_detected_items").eq("user_id",r.id).order("created_at",{ascending:!1}).limit(10);if(i){if(i.code==="PGRST205"||i.message?.includes("does not exist")){a.warn("FRIDGE_SCAN_PIPELINE","fridge_scan_sessions table not found (migration pending)",{code:i.code,message:i.message}),t({recentSessions:[]});return}a.error("FRIDGE_SCAN_PIPELINE","Failed to load recent sessions",{error:i.message,code:i.code}),t({recentSessions:[]});return}const l=(n||[]).map(o=>({sessionId:o.session_id,userId:o.user_id,stage:o.stage,createdAt:o.created_at,updatedAt:o.updated_at,capturedPhotos:o.captured_photos,rawDetectedItems:o.raw_detected_items}));t({recentSessions:l}),a.info("FRIDGE_SCAN_PIPELINE","Recent sessions loaded",{count:l.length,timestamp:new Date().toISOString()})}catch(e){a.warn("FRIDGE_SCAN_PIPELINE","Exception loading recent sessions",{error:e instanceof Error?e.message:"Unknown error",errorType:e instanceof Error?e.constructor.name:typeof e}),t({recentSessions:[]})}}}),{name:rt,storage:te(()=>localStorage),partialize:t=>{const s={currentStep:t.currentStep,isActive:t.isActive,currentSessionId:t.currentSessionId,simulatedLoadingStep:t.simulatedLoadingStep,simulatedScanProgress:t.simulatedScanProgress,simulatedOverallProgress:t.simulatedOverallProgress,rawDetectedItems:t.rawDetectedItems,userEditedInventory:t.userEditedInventory,mealPlan:t.mealPlan};return a.debug("FRIDGE_SCAN_PIPELINE_STORE","Partializing state for persistence",{currentStep:s.currentStep,isActive:s.isActive,sessionId:s.currentSessionId,rawDetectedItemsCount:s.rawDetectedItems?.length||0,userEditedInventoryCount:s.userEditedInventory?.length||0,timestamp:new Date().toISOString()}),s},merge:(t,s)=>{const e=t;a.debug("FRIDGE_SCAN_PIPELINE_STORE","Loading persisted data for merge",{persistedStep:e?.currentStep,persistedIsActive:e?.isActive,persistedSessionId:e?.currentSessionId,persistedOverallProgress:e?.simulatedOverallProgress,persistedRawDetectedItemsCount:e?.rawDetectedItems?.length||0,persistedUserEditedInventoryCount:e?.userEditedInventory?.length||0,timestamp:new Date().toISOString()});const r={...e,rawDetectedItems:Array.isArray(e?.rawDetectedItems)?e.rawDetectedItems:[],userEditedInventory:Array.isArray(e?.userEditedInventory)?e.userEditedInventory:[]},n={...s,...r};a.info("FRIDGE_SCAN_PIPELINE_STORE","Hydrating store state from persistence",{persistedStep:e?.currentStep,persistedIsActive:e?.isActive,persistedSessionId:e?.currentSessionId,persistedOverallProgress:e?.simulatedOverallProgress,hasInventory:e?.userEditedInventory?.length>0,timestamp:new Date().toISOString()});const i=e?.currentSessionId&&/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e.currentSessionId);if(i){n.currentSessionId=e.currentSessionId;const l=e?.rawDetectedItems?.length>0||e?.userEditedInventory?.length>0;n.isActive=l,e?.userEditedInventory?.length>0?n.currentStep="validation":e?.suggestedComplementaryItems?.length>0&&(e?.rawDetectedItems?.length||0)<ce?n.currentStep="complement":e?.rawDetectedItems?.length>0?n.currentStep="validation":n.currentStep="photo",a.debug("FRIDGE_SCAN_PIPELINE_STORE","Session validation result",{sessionId:e.currentSessionId,hasPersistedData:l,rawDetectedItemsCount:e?.rawDetectedItems?.length||0,inventoryCount:e?.userEditedInventory?.length||0,setActive:l,determinedStep:n.currentStep})}else n.currentSessionId=null,n.isActive=!1,n.currentStep="photo";if(n.simulatedLoadingStep=0,n.simulatedScanProgress=0,n.progressIntervalId=null,n.progressTimeoutId=null,n.loadingState="idle",n.loadingMessage="",n.currentStep){const l=w.find(o=>o.id===n.currentStep);n.simulatedOverallProgress=l?.startProgress||0,a.debug("FRIDGE_SCAN_PIPELINE_STORE","Setting progress from current step",{currentStep:n.currentStep,foundStepData:!!l,startProgress:l?.startProgress,finalProgress:n.simulatedOverallProgress,timestamp:new Date().toISOString()})}else n.simulatedOverallProgress=0,a.debug("FRIDGE_SCAN_PIPELINE_STORE","Setting progress to 0 (no step)",{currentStep:n.currentStep,timestamp:new Date().toISOString()});return n.steps=s.steps,a.info("FRIDGE_SCAN_PIPELINE_STORE","Store state hydration completed",{finalIsActive:n.isActive,finalCurrentStep:n.currentStep,finalSessionId:n.currentSessionId,finalOverallProgress:n.simulatedOverallProgress,sessionValid:i,hasInventory:n.userEditedInventory?.length>0,timestamp:new Date().toISOString()}),n}})),U=["Analyse du plan de repas...","Calcul des quantités nécessaires...","Génération de la liste intelligente...","Optimisation des catégories...","Ajout de suggestions personnalisées...","Estimation budgétaire en cours..."],X=["Examen détaillé de vos repas planifiés","Adaptation selon vos préférences alimentaires","Optimisation personnalisée en cours","Organisation par rayons de magasin","Conseils personnalisés basés sur votre profil","Calcul des coûts selon votre région"],Tt=O()(H((t,s)=>({shoppingList:null,suggestions:[],advice:[],budgetEstimation:null,generationMode:"user_only",selectedMealPlanId:null,isGenerating:!1,simulatedProgressPercentage:0,currentLoadingTitle:"",currentLoadingSubtitle:"",progressInterval:null,setGenerationMode:e=>t({generationMode:e}),setSelectedMealPlanId:e=>t({selectedMealPlanId:e}),startSimulatedProgress:()=>{const e=s();e.progressInterval&&clearInterval(e.progressInterval),t({simulatedProgressPercentage:0,currentLoadingTitle:U[0],currentLoadingSubtitle:X[0]});let r=0;const i=3e4/U.length,l=95/U.length,o=setInterval(()=>{s();const c=Math.min(95,(r+1)*l);t({simulatedProgressPercentage:c,currentLoadingTitle:U[r]||U[U.length-1],currentLoadingSubtitle:X[r]||X[X.length-1]}),r++,r>=U.length&&(r=U.length-1)},i);t({progressInterval:o})},stopSimulatedProgress:()=>{const e=s();e.progressInterval&&(clearInterval(e.progressInterval),t({progressInterval:null,simulatedProgressPercentage:100,currentLoadingTitle:"Liste générée avec succès !",currentLoadingSubtitle:"Votre liste de courses personnalisée est prête"}))},generateShoppingList:async e=>{const{generationMode:r,selectedMealPlanId:n}=e;a.info("SHOPPING_LIST_STORE","Starting shopping list generation",{generationMode:r,selectedMealPlanId:n});try{t({isGenerating:!0}),s().startSimulatedProgress();const{data:{user:i}}=await m.auth.getUser();if(!i)throw a.error("Cannot generate shopping list: user not authenticated"),new Error("User not authenticated");a.info("Starting shopping list generation",{mealPlanId:n,generationMode:r,userId:i.id}),a.debug("Calling shopping-list-generator edge function");const{data:l,error:o}=await m.functions.invoke("shopping-list-generator",{body:{user_id:i.id,meal_plan_id:n,generation_mode:r}});if(o)throw a.error("Shopping list generation API error",o),a.error("SHOPPING_LIST_STORE","Edge function error",{error:o}),o;if(!l||!l.shopping_list)throw a.error("SHOPPING_LIST_STORE","Invalid response from edge function",{data:l}),new Error("Invalid response from shopping list generator");a.info("Shopping list generation API response received",{hasShoppingList:!!l.shopping_list,hasSuggestions:!!l.suggestions,hasAdvice:!!l.advice,hasBudgetEstimation:!!l.budget_estimation});const c=(l.shopping_list||[]).map(g=>({id:g.id||`category-${Date.now()}-${Math.random()}`,name:g.category||g.name||"Unknown Category",icon:g.icon||"Package",color:g.color||"#6B7280",estimatedTotal:g.estimatedTotal||0,items:(g.items||[]).map(d=>({id:d.id||`item-${Date.now()}-${Math.random()}`,name:d.name||"Unknown Item",quantity:d.quantity||"1",estimatedPrice:d.estimatedPrice||0,priority:d.priority||"medium",isChecked:!1}))})),u=c.reduce((g,d)=>g+d.items.length,0);a.info("SHOPPING_LIST_STORE","Successfully generated shopping list",{categoriesCount:c.length,itemCount:u,suggestionsCount:l.suggestions?.length||0,adviceCount:l.advice?.length||0,hasBudget:!!l.budget_estimation}),c.forEach((g,d)=>{a.debug("SHOPPING_LIST_STORE",`Category ${d+1}: ${g.name}`,{itemsCount:g.items.length,items:g.items.map(S=>`${S.name} (${S.quantity})`)})});const p={id:l.shopping_list?.id||`list-${Date.now()}`,name:l.shopping_list?.name||"Liste de Courses",generationMode:r,totalItems:u,completedItems:0,totalEstimatedCost:l.shopping_list?.totalEstimatedCost||0,categories:c,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};s().stopSimulatedProgress(),t({shoppingList:p,suggestions:l.suggestions||[],advice:l.advice||[],budgetEstimation:l.budget_estimation||null,isGenerating:!1}),a.info("Shopping list generation completed successfully",{itemsCount:u,suggestionsCount:l.suggestions?.length||0,adviceCount:l.advice?.length||0})}catch(i){throw a.error("Shopping list generation failed",i),a.error("SHOPPING_LIST_STORE","Failed to generate shopping list",{error:i}),s().stopSimulatedProgress(),t({isGenerating:!1,simulatedProgressPercentage:0}),i}},reset:()=>{const e=s();e.progressInterval&&clearInterval(e.progressInterval),t({shoppingList:null,suggestions:[],advice:[],budgetEstimation:null,selectedMealPlanId:null,isGenerating:!1,simulatedProgressPercentage:0,currentLoadingTitle:"",currentLoadingSubtitle:"",progressInterval:null})}}),{name:"shopping-list-store",partialize:t=>({shoppingList:t.shoppingList,suggestions:t.suggestions,advice:t.advice,budgetEstimation:t.budgetEstimation,generationMode:t.generationMode,selectedMealPlanId:t.selectedMealPlanId})})),_e={push_notifications_enabled:!0,in_app_notifications_enabled:!0,email_notifications_enabled:!1,notification_sound_enabled:!0,notification_vibration_enabled:!0},dt={push_enabled:!0,in_app_enabled:!0,email_enabled:!1,sound_enabled:!0,vibration_enabled:!0,priority_filter:"all",quiet_hours_enabled:!1,quiet_hours_start:null,quiet_hours_end:null},Ct=[{category:"training",label:"Entraînement",description:"Séances planifiées, rappels d'exercices, progression",icon:"Dumbbell",defaultEnabled:!0,canDisable:!0,examples:["Rappel de séance planifiée dans 30 minutes","Nouvelle séance recommandée disponible","Objectif hebdomadaire atteint"]},{category:"nutrition",label:"Nutrition",description:"Repas, recettes, plans alimentaires",icon:"UtensilsCrossed",defaultEnabled:!0,canDisable:!0,examples:["Rappel de repas","Nouvelle recette suggérée","Objectif calorique atteint"]},{category:"fasting",label:"Jeûne",description:"Fenêtres de jeûne, rappels, progression",icon:"Clock",defaultEnabled:!0,canDisable:!0,examples:["Fenêtre de jeûne se termine dans 1h","Nouveau record de jeûne établi","Rappel d'hydratation"]},{category:"activity",label:"Activité",description:"Activités quotidiennes, objectifs de pas",icon:"Activity",defaultEnabled:!0,canDisable:!0,examples:["Objectif quotidien de pas atteint","Rappel de mouvement","Nouvelle activité détectée"]},{category:"system",label:"Système",description:"Mises à jour, maintenance, alertes importantes",icon:"Settings",defaultEnabled:!0,canDisable:!1,examples:["Nouvelle fonctionnalité disponible","Mise à jour de sécurité","Maintenance planifiée"]},{category:"social",label:"Social",description:"Messages, interactions avec la communauté",icon:"Users",defaultEnabled:!0,canDisable:!0,examples:["Nouveau message reçu","Quelqu'un a aimé votre activité","Invitation à rejoindre un défi"]},{category:"achievements",label:"Réussites",description:"Badges, jalons, accomplissements",icon:"Trophy",defaultEnabled:!0,canDisable:!0,examples:["Nouveau badge débloqué","Jalon atteint","Record personnel battu"]}],B="twinforge-notification-prefs",Rt=O((t,s)=>({globalSettings:{..._e},categoryPreferences:new Map,pushSubscriptions:[],activePushSubscription:null,recentHistory:[],stats:null,isLoading:!1,isSaving:!1,error:null,lastSyncedAt:null,loadGlobalSettings:async e=>{try{t({isLoading:!0,error:null});const r=`${B}-global`,n=localStorage.getItem(r);if(n){const i=JSON.parse(n);t({globalSettings:i})}if(e){const{data:i,error:l}=await m.from("user_preferences").select("push_notifications_enabled, in_app_notifications_enabled, email_notifications_enabled, notification_sound_enabled, notification_vibration_enabled").eq("user_id",e).maybeSingle();if(l)a.error("NOTIFICATION_PREFS","Failed to load global settings from Supabase",{error:l});else if(i){const o={push_notifications_enabled:i.push_notifications_enabled??!0,in_app_notifications_enabled:i.in_app_notifications_enabled??!0,email_notifications_enabled:i.email_notifications_enabled??!1,notification_sound_enabled:i.notification_sound_enabled??!0,notification_vibration_enabled:i.notification_vibration_enabled??!0};t({globalSettings:o,lastSyncedAt:new Date().toISOString()}),localStorage.setItem(r,JSON.stringify(o)),a.info("NOTIFICATION_PREFS","Loaded global settings from Supabase")}}t({isLoading:!1})}catch(r){a.error("NOTIFICATION_PREFS","Error loading global settings",{error:r}),t({isLoading:!1,error:"Erreur lors du chargement des paramètres"})}},updateGlobalSetting:async(e,r,n)=>{try{t({isSaving:!0,error:null});const l={...s().globalSettings,[e]:r};t({globalSettings:l});const o=`${B}-global`;if(localStorage.setItem(o,JSON.stringify(l)),n){const{error:c}=await m.from("user_preferences").update({[e]:r,updated_at:new Date().toISOString()}).eq("user_id",n);if(c){a.error("NOTIFICATION_PREFS","Failed to update global setting in Supabase",{error:c}),t({isSaving:!1,error:"Erreur lors de la sauvegarde"});return}a.info("NOTIFICATION_PREFS","Updated global setting",{key:e,value:r}),t({lastSyncedAt:new Date().toISOString()})}t({isSaving:!1})}catch(i){a.error("NOTIFICATION_PREFS","Error updating global setting",{error:i}),t({isSaving:!1,error:"Erreur lors de la sauvegarde"})}},toggleGlobalNotifications:async(e,r)=>{const{updateGlobalSetting:n}=s();await n("push_notifications_enabled",e,r),await n("in_app_notifications_enabled",e,r)},loadCategoryPreferences:async e=>{try{if(t({isLoading:!0,error:null}),!e){const o=`${B}-categories`,c=localStorage.getItem(o);if(c){const u=JSON.parse(c),p=new Map(Object.entries(u));t({categoryPreferences:p})}t({isLoading:!1});return}const{data:r,error:n}=await m.from("notification_preferences").select("*").eq("user_id",e);if(n){a.error("NOTIFICATION_PREFS","Failed to load category preferences",{error:n}),t({isLoading:!1});return}const i=new Map;r&&r.length>0&&r.forEach(o=>{i.set(o.category,o)}),t({categoryPreferences:i,lastSyncedAt:new Date().toISOString(),isLoading:!1});const l=`${B}-categories`;localStorage.setItem(l,JSON.stringify(Object.fromEntries(i))),a.info("NOTIFICATION_PREFS","Loaded category preferences",{count:i.size})}catch(r){a.error("NOTIFICATION_PREFS","Error loading category preferences",{error:r}),t({isLoading:!1,error:"Erreur lors du chargement des préférences"})}},updateCategoryPreference:async(e,r,n)=>{try{t({isSaving:!0,error:null});const i=s().categoryPreferences,l=i.get(e);if(!n){if(l){const g={...l,...r},d=new Map(i);d.set(e,g),t({categoryPreferences:d});const S=`${B}-categories`;localStorage.setItem(S,JSON.stringify(Object.fromEntries(d)))}t({isSaving:!1});return}const{data:o,error:c}=await m.from("notification_preferences").upsert({user_id:n,category:e,...r,updated_at:new Date().toISOString()},{onConflict:"user_id,category"}).select().single();if(c)throw a.error("NOTIFICATION_PREFS","Failed to update category preference",{error:c}),c;const u=new Map(i);u.set(e,o),t({categoryPreferences:u,lastSyncedAt:new Date().toISOString(),isSaving:!1});const p=`${B}-categories`;localStorage.setItem(p,JSON.stringify(Object.fromEntries(u))),a.info("NOTIFICATION_PREFS","Updated category preference",{category:e,updates:r})}catch(i){a.error("NOTIFICATION_PREFS","Error updating category preference",{error:i}),t({isSaving:!1,error:"Erreur lors de la sauvegarde"})}},resetCategoryToDefaults:async(e,r)=>{const{updateCategoryPreference:n}=s();await n(e,{...dt},r)},loadPushSubscriptions:async e=>{try{if(t({isLoading:!0,error:null}),!e){t({isLoading:!1});return}const{data:r,error:n}=await m.from("push_subscriptions").select("*").eq("user_id",e).eq("is_active",!0).order("created_at",{ascending:!1});if(n){a.error("NOTIFICATION_PREFS","Failed to load push subscriptions",{error:n}),t({pushSubscriptions:[],activePushSubscription:null,isLoading:!1});return}const i=r||[],l=i.length>0?i[0]:null;t({pushSubscriptions:i,activePushSubscription:l,lastSyncedAt:new Date().toISOString(),isLoading:!1}),a.info("NOTIFICATION_PREFS","Loaded push subscriptions",{count:i.length})}catch(r){a.error("NOTIFICATION_PREFS","Error loading push subscriptions",{error:r}),t({isLoading:!1,error:"Erreur lors du chargement des abonnements"})}},subscribeToPush:async(e,r)=>{try{if(t({isSaving:!0,error:null}),!r)throw new Error("User ID required to subscribe to push notifications");const{data:n,error:i}=await m.from("push_subscriptions").insert({user_id:r,subscription_endpoint:e.subscription_endpoint,subscription_keys:e.subscription_keys,device_info:e.device_info,is_active:!0}).select().single();if(i)throw a.error("NOTIFICATION_PREFS","Failed to subscribe to push",{error:i}),i;const l=n,o=s().pushSubscriptions;t({pushSubscriptions:[l,...o],activePushSubscription:l,lastSyncedAt:new Date().toISOString(),isSaving:!1}),a.info("NOTIFICATION_PREFS","Subscribed to push notifications")}catch(n){a.error("NOTIFICATION_PREFS","Error subscribing to push",{error:n}),t({isSaving:!1,error:"Erreur lors de l'abonnement aux notifications"})}},unsubscribeFromPush:async(e,r)=>{try{if(t({isSaving:!0,error:null}),!r)throw new Error("User ID required to unsubscribe from push notifications");const{error:n}=await m.from("push_subscriptions").update({is_active:!1}).eq("id",e).eq("user_id",r);if(n)throw a.error("NOTIFICATION_PREFS","Failed to unsubscribe from push",{error:n}),n;const l=s().pushSubscriptions.filter(c=>c.id!==e),o=l.length>0?l[0]:null;t({pushSubscriptions:l,activePushSubscription:o,lastSyncedAt:new Date().toISOString(),isSaving:!1}),a.info("NOTIFICATION_PREFS","Unsubscribed from push notifications")}catch(n){a.error("NOTIFICATION_PREFS","Error unsubscribing from push",{error:n}),t({isSaving:!1,error:"Erreur lors de la désinscription"})}},checkPushPermission:async()=>"Notification"in window?Notification.permission:"denied",requestPushPermission:async()=>{try{if(!("Notification"in window))return a.warn("NOTIFICATION_PREFS","Push notifications not supported"),!1;const e=await Notification.requestPermission();return a.info("NOTIFICATION_PREFS","Push permission requested",{permission:e}),e==="granted"}catch(e){return a.error("NOTIFICATION_PREFS","Error requesting push permission",{error:e}),!1}},loadNotificationHistory:async(e,r=30)=>{try{if(t({isLoading:!0,error:null}),!e){t({isLoading:!1});return}const n=new Date;n.setDate(n.getDate()-r);const{data:i,error:l}=await m.from("notification_history").select("*").eq("user_id",e).gte("sent_at",n.toISOString()).order("sent_at",{ascending:!1}).limit(100);if(l)throw a.error("NOTIFICATION_PREFS","Failed to load notification history",{error:l}),l;t({recentHistory:i||[],lastSyncedAt:new Date().toISOString(),isLoading:!1}),a.info("NOTIFICATION_PREFS","Loaded notification history",{count:i?.length||0})}catch(n){a.error("NOTIFICATION_PREFS","Error loading notification history",{error:n}),t({isLoading:!1,error:"Erreur lors du chargement de l'historique"})}},loadNotificationStats:async(e,r=30)=>{try{if(t({isLoading:!0,error:null}),!e){t({isLoading:!1});return}s().recentHistory.length===0&&await s().loadNotificationHistory(e,r);const i=s().recentHistory,l={total_sent:i.length,total_delivered:i.filter(o=>o.status==="delivered").length,total_clicked:i.filter(o=>o.status==="clicked").length,total_dismissed:i.filter(o=>o.status==="dismissed").length,total_failed:i.filter(o=>o.status==="failed").length,delivery_rate:0,click_rate:0,by_category:{},by_priority:{}};l.delivery_rate=l.total_sent>0?l.total_delivered/l.total_sent*100:0,l.click_rate=l.total_delivered>0?l.total_clicked/l.total_delivered*100:0,t({stats:l,isLoading:!1}),a.info("NOTIFICATION_PREFS","Calculated notification stats",{stats:l})}catch(n){a.error("NOTIFICATION_PREFS","Error loading notification stats",{error:n}),t({isLoading:!1,error:"Erreur lors du chargement des statistiques"})}},clearError:()=>t({error:null}),reset:()=>t({globalSettings:{..._e},categoryPreferences:new Map,pushSubscriptions:[],activePushSubscription:null,recentHistory:[],stats:null,isLoading:!1,isSaving:!1,error:null,lastSyncedAt:null})}));function Nt(t){const s=new Date(t),e=new Date,r=s.getTime()-e.getTime();return Math.ceil(r/(1e3*60*60*24))}function Lt(t){return t.status==="pending"||t.status==="scheduled"}function Mt(t){return t?t<1024?`${t} B`:t<1024*1024?`${(t/1024).toFixed(2)} KB`:t<1024*1024*1024?`${(t/(1024*1024)).toFixed(2)} MB`:`${(t/(1024*1024*1024)).toFixed(2)} GB`:"N/A"}const Ie={data_retention_preference:"standard",analytics_tracking_enabled:!0,marketing_communications_enabled:!1},kt=[{category:"profile",label:"Profil",description:"Informations personnelles, photo, préférences de base",icon:"User",estimatedSize:"~100 KB",includeByDefault:!0,examples:["Nom, email, date de naissance","Photo de profil","Paramètres de compte"]},{category:"training",label:"Entraînement",description:"Séances, exercices, progression",icon:"Dumbbell",estimatedSize:"~5 MB",includeByDefault:!0,examples:["Historique des séances","Exercices personnalisés","Objectifs et progression"]},{category:"nutrition",label:"Nutrition",description:"Repas, recettes, plans alimentaires",icon:"UtensilsCrossed",estimatedSize:"~3 MB",includeByDefault:!0,examples:["Journal alimentaire","Recettes favorites","Plans de repas"]},{category:"fasting",label:"Jeûne",description:"Sessions de jeûne, progression",icon:"Clock",estimatedSize:"~500 KB",includeByDefault:!0,examples:["Historique de jeûne","Statistiques","Protocoles utilisés"]},{category:"body_scans",label:"Scans corporels",description:"Photos, mesures, morphologie",icon:"Scan",estimatedSize:"~20 MB",includeByDefault:!0,examples:["Photos de scan","Mesures corporelles","Évolution morphologique"]},{category:"activities",label:"Activités",description:"Activités quotidiennes, GPS, calories",icon:"Activity",estimatedSize:"~2 MB",includeByDefault:!0,examples:["Historique d'activités","Données GPS","Calories brûlées"]},{category:"health",label:"Santé",description:"Données de santé, métriques biométriques",icon:"Heart",estimatedSize:"~1 MB",includeByDefault:!0,examples:["Fréquence cardiaque","Poids","Mesures biométriques"]},{category:"preferences",label:"Préférences",description:"Paramètres, notifications, thème",icon:"Settings",estimatedSize:"~50 KB",includeByDefault:!0,examples:["Paramètres d'affichage","Préférences de notifications","Mode de performance"]},{category:"notifications",label:"Notifications",description:"Historique des notifications",icon:"Bell",estimatedSize:"~500 KB",includeByDefault:!1,examples:["Notifications reçues","Préférences de notifications"]}],he="twinforge-privacy",Ft=O((t,s)=>({preferences:{...Ie},activeDeletionRequest:null,recentExportRequests:[],consents:new Map,recentAccessLog:[],isLoading:!1,isSaving:!1,error:null,lastSyncedAt:null,loadPrivacyPreferences:async e=>{try{t({isLoading:!0,error:null});const r=`${he}-preferences`,n=localStorage.getItem(r);if(n){const i=JSON.parse(n);t({preferences:i})}if(e){const{data:i,error:l}=await m.from("user_preferences").select("data_retention_preference, analytics_tracking_enabled, third_party_sharing_enabled, marketing_communications_enabled").eq("user_id",e).maybeSingle();if(l)a.error("DATA_PRIVACY","Failed to load privacy preferences from Supabase",{error:l});else if(i){const o={data_retention_preference:i.data_retention_preference??"standard",analytics_tracking_enabled:i.analytics_tracking_enabled??!0,third_party_sharing_enabled:i.third_party_sharing_enabled??!1,marketing_communications_enabled:i.marketing_communications_enabled??!1};t({preferences:o,lastSyncedAt:new Date().toISOString()}),localStorage.setItem(r,JSON.stringify(o)),a.info("DATA_PRIVACY","Loaded privacy preferences from Supabase")}}t({isLoading:!1})}catch(r){a.error("DATA_PRIVACY","Error loading privacy preferences",{error:r}),t({isLoading:!1,error:"Erreur lors du chargement des préférences"})}},updatePrivacyPreference:async(e,r,n)=>{try{t({isSaving:!0,error:null});const l={...s().preferences,[e]:r};t({preferences:l});const o=`${he}-preferences`;if(localStorage.setItem(o,JSON.stringify(l)),n){const{error:c}=await m.from("user_preferences").update({[e]:r,updated_at:new Date().toISOString()}).eq("user_id",n);if(c){a.error("DATA_PRIVACY","Failed to update privacy preference in Supabase",{error:c}),t({isSaving:!1,error:"Erreur lors de la sauvegarde"});return}a.info("DATA_PRIVACY","Updated privacy preference",{key:e,value:r}),t({lastSyncedAt:new Date().toISOString()})}t({isSaving:!1})}catch(i){a.error("DATA_PRIVACY","Error updating privacy preference",{error:i}),t({isSaving:!1,error:"Erreur lors de la sauvegarde"})}},loadExportRequests:async e=>{try{if(t({isLoading:!0,error:null}),!e){t({isLoading:!1});return}const{data:r,error:n}=await m.from("data_export_requests").select("*").eq("user_id",e).order("requested_at",{ascending:!1}).limit(10);if(n){a.error("DATA_PRIVACY","Failed to load export requests",{error:n}),t({recentExportRequests:[],isLoading:!1});return}t({recentExportRequests:r||[],lastSyncedAt:new Date().toISOString(),isLoading:!1}),a.info("DATA_PRIVACY","Loaded export requests",{count:r?.length||0})}catch(r){a.error("DATA_PRIVACY","Error loading export requests",{error:r}),t({isLoading:!1,error:"Erreur lors du chargement des demandes d'export"})}},requestDataExport:async(e,r)=>{try{if(t({isSaving:!0,error:null}),!r)throw new Error("User ID required to request data export");const{data:n,error:i}=await m.rpc("request_data_export",{p_user_id:r,p_request_type:e.request_type,p_export_format:e.export_format,p_included_data:e.included_data});if(i)throw a.error("DATA_PRIVACY","Failed to request data export",{error:i}),i;const l=n;return await s().loadExportRequests(r),t({isSaving:!1}),a.info("DATA_PRIVACY","Data export requested",{requestId:l}),l}catch(n){return a.error("DATA_PRIVACY","Error requesting data export",{error:n}),t({isSaving:!1,error:"Erreur lors de la demande d'export"}),null}},getExportDownloadUrl:async e=>{try{const{data:r,error:n}=await m.from("data_export_requests").select("file_url, expires_at, status").eq("id",e).maybeSingle();return n?(a.error("DATA_PRIVACY","Failed to get export download URL",{error:n}),null):!r||r.status!=="completed"||!r.file_url?null:r.expires_at&&new Date(r.expires_at)<new Date?(a.warn("DATA_PRIVACY","Export download link expired",{requestId:e}),null):r.file_url}catch(r){return a.error("DATA_PRIVACY","Error getting export download URL",{error:r}),null}},loadDeletionRequest:async e=>{try{if(t({isLoading:!0,error:null}),!e){t({isLoading:!1});return}const{data:r,error:n}=await m.from("account_deletion_requests").select("*").eq("user_id",e).in("status",["pending","scheduled","processing"]).maybeSingle();if(n){a.error("DATA_PRIVACY","Failed to load deletion request",{error:n}),t({activeDeletionRequest:null,isLoading:!1});return}t({activeDeletionRequest:r,lastSyncedAt:new Date().toISOString(),isLoading:!1}),a.info("DATA_PRIVACY","Loaded deletion request",{hasActive:!!r})}catch(r){a.error("DATA_PRIVACY","Error loading deletion request",{error:r}),t({isLoading:!1,error:"Erreur lors du chargement de la demande de suppression"})}},requestAccountDeletion:async(e,r)=>{try{if(t({isSaving:!0,error:null}),!r)throw new Error("User ID required to request account deletion");const{data:n,error:i}=await m.rpc("request_account_deletion",{p_user_id:r,p_delete_all_data:e.delete_all_data,p_anonymize_only:e.anonymize_only,p_reason:e.reason||null});if(i)throw a.error("DATA_PRIVACY","Failed to request account deletion",{error:i}),i;const l=n;return await s().loadDeletionRequest(r),t({isSaving:!1}),a.info("DATA_PRIVACY","Account deletion requested",{requestId:l}),l}catch(n){return a.error("DATA_PRIVACY","Error requesting account deletion",{error:n}),t({isSaving:!1,error:"Erreur lors de la demande de suppression de compte"}),null}},cancelAccountDeletion:async(e,r)=>{try{if(t({isSaving:!0,error:null}),!r)throw new Error("User ID required to cancel account deletion");const{data:n,error:i}=await m.rpc("cancel_account_deletion",{p_user_id:r,p_cancellation_reason:e.reason||null});if(i)throw a.error("DATA_PRIVACY","Failed to cancel account deletion",{error:i}),i;const l=n;return l&&(t({activeDeletionRequest:null}),a.info("DATA_PRIVACY","Account deletion cancelled")),t({isSaving:!1}),l}catch(n){return a.error("DATA_PRIVACY","Error cancelling account deletion",{error:n}),t({isSaving:!1,error:"Erreur lors de l'annulation de la suppression"}),!1}},loadConsents:async e=>{try{if(t({isLoading:!0,error:null}),!e){t({isLoading:!1});return}const{data:r,error:n}=await m.from("data_privacy_consents").select("*").eq("user_id",e).order("consented_at",{ascending:!1});if(n)throw a.error("DATA_PRIVACY","Failed to load consents",{error:n}),n;const i=new Map;(r||[]).forEach(l=>{i.has(l.consent_type)||i.set(l.consent_type,l)}),t({consents:i,lastSyncedAt:new Date().toISOString(),isLoading:!1}),a.info("DATA_PRIVACY","Loaded consents",{count:i.size})}catch(r){a.error("DATA_PRIVACY","Error loading consents",{error:r}),t({isLoading:!1,error:"Erreur lors du chargement des consentements"})}},updateConsent:async(e,r)=>{try{if(t({isSaving:!0,error:null}),!r)throw new Error("User ID required to update consent");const{data:n,error:i}=await m.rpc("record_consent",{p_user_id:r,p_consent_type:e.consent_type,p_consent_given:e.consent_given,p_consent_version:e.consent_version,p_ip_address:null,p_user_agent:navigator.userAgent});if(i)throw a.error("DATA_PRIVACY","Failed to update consent",{error:i}),i;await s().loadConsents(r),t({isSaving:!1}),a.info("DATA_PRIVACY","Consent updated",{consent:e})}catch(n){a.error("DATA_PRIVACY","Error updating consent",{error:n}),t({isSaving:!1,error:"Erreur lors de la mise à jour du consentement"})}},loadAccessLog:async(e,r=30)=>{try{if(t({isLoading:!0,error:null}),!e){t({isLoading:!1});return}const n=new Date;n.setDate(n.getDate()-r);const{data:i,error:l}=await m.from("data_access_log").select("*").eq("user_id",e).gte("accessed_at",n.toISOString()).order("accessed_at",{ascending:!1}).limit(50);if(l)throw a.error("DATA_PRIVACY","Failed to load access log",{error:l}),l;t({recentAccessLog:i||[],lastSyncedAt:new Date().toISOString(),isLoading:!1}),a.info("DATA_PRIVACY","Loaded access log",{count:i?.length||0})}catch(n){a.error("DATA_PRIVACY","Error loading access log",{error:n}),t({isLoading:!1,error:"Erreur lors du chargement du journal d'accès"})}},loadPrivacyDashboard:async e=>{try{if(t({isLoading:!0,error:null}),!e)return t({isLoading:!1}),null;const{data:r,error:n}=await m.rpc("get_privacy_dashboard",{p_user_id:e});if(n)throw a.error("DATA_PRIVACY","Failed to load privacy dashboard",{error:n}),n;const i=r;return t({activeDeletionRequest:i.active_deletion_request,recentExportRequests:i.recent_exports||[],lastSyncedAt:new Date().toISOString(),isLoading:!1}),a.info("DATA_PRIVACY","Loaded privacy dashboard"),i}catch(r){return a.error("DATA_PRIVACY","Error loading privacy dashboard",{error:r}),t({isLoading:!1,error:"Erreur lors du chargement du tableau de bord"}),null}},clearError:()=>t({error:null}),reset:()=>t({preferences:{...Ie},activeDeletionRequest:null,recentExportRequests:[],consents:new Map,recentAccessLog:[],isLoading:!1,isSaving:!1,error:null,lastSyncedAt:null})})),ut=[{title:"Initialisation du scan",subtitle:"Configuration des algorithmes d'analyse corporelle"},{title:"Sécurisation des photos",subtitle:"Protection et optimisation des images"},{title:"Nettoyage intelligent",subtitle:"Amélioration automatique de la qualité"},{title:"Détection silhouette",subtitle:"Identification de 24 points anatomiques"},{title:"Estimation des mesures",subtitle:"Calcul précis des dimensions corporelles"},{title:"Analyse de la peau",subtitle:"Extraction des propriétés chromatiques"},{title:"Profil morphologique",subtitle:"Classification selon 300+ archétypes"},{title:"Sélection d'archétypes",subtitle:"Recherche des correspondances optimales"},{title:"Affinage IA",subtitle:"Personnalisation par intelligence artificielle"},{title:"Contrôles de cohérence",subtitle:"Validation des paramètres calculés"},{title:"Préparation du modèle 3D",subtitle:"Initialisation du mesh corporel"},{title:"Application des morphs",subtitle:"Déformation géométrique personnalisée"},{title:"Répartition des masses",subtitle:"Calcul des proportions anatomiques"},{title:"Peau & matériaux",subtitle:"Application des propriétés visuelles"},{title:"Mise en scène",subtitle:"Optimisation de la présentation 3D"},{title:"Validation finale",subtitle:"Contrôle qualité automatisé"},{title:"Avatar prêt",subtitle:"Rendu 3D disponible pour interaction"}],pt=[{title:"Initialisation du scan facial",subtitle:"Configuration des algorithmes d'analyse"},{title:"Sécurisation des photos faciales",subtitle:"Protection et optimisation des données"},{title:"Nettoyage intelligent du visage",subtitle:"Amélioration automatique de la qualité"},{title:"Détection des traits faciaux",subtitle:"Cartographie de 68 points de référence"},{title:"Analyse sémantique faciale",subtitle:"Classification morphologique avancée"},{title:"Sélection d'archétypes faciaux",subtitle:"Recherche dans la base de données"},{title:"Affinage IA du visage",subtitle:"Personnalisation par intelligence artificielle"},{title:"Contrôles de cohérence faciale",subtitle:"Validation des paramètres calculés"},{title:"Préparation du modèle 3D facial",subtitle:"Initialisation du mesh de base"},{title:"Application des morphs faciaux",subtitle:"Déformation géométrique personnalisée"},{title:"Peau & matériaux faciaux",subtitle:"Application des propriétés visuelles"},{title:"Mise en scène faciale",subtitle:"Optimisation de la présentation 3D"},{title:"Validation finale du visage",subtitle:"Contrôle qualité automatisé"},{title:"Avatar facial prêt",subtitle:"Rendu 3D disponible pour interaction"}],ve={front_taken:25,profile_taken:50,done:50},Ee={upload:{progress:55,message:"Analyse IA Avancée",subMessage:"Téléchargement des photos..."},estimate:{progress:65,message:"Analyse IA Avancée",subMessage:"Extraction des mesures corporelles..."},semantic:{progress:75,message:"Analyse IA Avancée",subMessage:"Classification morphologique..."},match:{progress:85,message:"Analyse IA Avancée",subMessage:"Sélection des archétypes..."},commit:{progress:90,message:"Analyse IA Avancée",subMessage:"Sauvegarde des données..."},model_loading:{progress:92,message:"Chargement de votre avatar",subMessage:"Téléchargement du modèle 3D..."},model_loaded:{progress:94,message:"Chargement de votre avatar",subMessage:"Modèle 3D chargé avec succès..."},morphs_applied:{progress:97,message:"Chargement de votre avatar",subMessage:"Application des paramètres morphologiques..."},first_frame_rendered:{progress:100,message:"Avatar 3D Prêt",subMessage:"Votre reflet numérique est maintenant visible"}},Ut=O((t,s)=>({isActive:!1,clientScanId:null,serverScanId:null,currentStep:"capture",overallProgress:0,phaseProgress:0,message:"",subMessage:"",steps:[],totalSteps:0,flowType:null,progressHistory:[],dynamicProgressIntervalId:null,dynamicProgressStepIndex:0,lastSoundThreshold:-1,startProgress:(e,r,n)=>{if(!r||typeof r!="string"){a.error("startProgress called without valid clientScanId",{clientScanId:r});return}const i=s();if(i.isActive&&i.clientScanId===r)return;i.isActive&&i.clientScanId&&i.clientScanId!==r&&a.error("Starting new progress while another is active",{activeScanId:i.clientScanId,newScanId:r});const l=Date.now();t({isActive:!0,clientScanId:r,serverScanId:null,steps:e,totalSteps:e.length,currentStep:"capture",overallProgress:0,phaseProgress:0,message:e[0]?.subtitle||"",subMessage:"",lastUpdateTime:l,flowType:n,progressHistory:[{step:e[0]?.id||"",progress:0,timestamp:l}],lastSoundThreshold:-1}),a.info("Progress started",{clientScanId:r,steps:e.length})},setCaptureProgress:e=>{const r=s();if(!r.isActive){a.warn("setCaptureProgress called but progress not active",{step:e});return}const n=ve[e];if(n===void 0){a.error("Invalid capture step",{step:e,validSteps:Object.keys(ve)});return}if(n<r.overallProgress){a.debug("Rejected non-monotonic capture progress",{targetProgress:n,step:e,reason:"progress_would_decrease"});return}const i=Date.now(),l={step:"capture",progress:n,timestamp:i},o=[...r.progressHistory,l].slice(-20);t({currentStep:"capture",overallProgress:n,phaseProgress:n,message:"Capture Photographique",subMessage:e==="front_taken"?"Capturez votre photo de profil - tournez-vous à 90°":"Photos capturées avec succès - Prêt pour l'analyse IA",lastUpdateTime:i,progressHistory:o}),a.info(`Capture progress: ${n}%`,{step:e,progress:n,timestamp:new Date().toISOString()})},setProcessingStep:e=>{const r=s();if(r.dynamicProgressIntervalId!==null)return;const n=Ee[e];if(!n){a.error("Invalid processing step",{step:e,validSteps:Object.keys(Ee)});return}if(n.progress<r.overallProgress)return;const i=Date.now(),l={step:e,progress:n.progress,timestamp:i},o=[...r.progressHistory,l].slice(-20);t({currentStep:"processing",overallProgress:n.progress,phaseProgress:n.progress,message:n.message,subMessage:n.subMessage,lastUpdateTime:i,progressHistory:o}),a.info("Processing step",{step:e,progress:n.progress})},setComplete:()=>{const e=s();if(!e.isActive){a.warn("setComplete called but progress not active");return}s().stopDynamicProcessing();const r=Date.now();t({currentStep:"celebration",overallProgress:95,phaseProgress:95,message:"Données Traitées",subMessage:"Préparation du rendu 3D...",lastUpdateTime:r}),a.info("Processing completed - celebration step",{serverScanId:e.serverScanId,step:"celebration",progress:95,timestamp:new Date().toISOString()})},setRendering:()=>{const e=s();if(!e.isActive){a.warn("setRendering called but progress not active");return}const r=Date.now();t({currentStep:"avatar",overallProgress:98,phaseProgress:98,message:"Chargement de votre avatar",subMessage:"Préparation du conteneur 3D...",lastUpdateTime:r}),a.info("Avatar rendering started",{serverScanId:e.serverScanId,step:"avatar",progress:98,timestamp:new Date().toISOString()})},setRenderReady:()=>{const e=s();if(!e.isActive){a.warn("setRenderReady called but progress not active");return}s().stopDynamicProcessing();const r=Date.now();t({currentStep:"avatar",overallProgress:100,phaseProgress:100,message:"Avatar 3D Prêt",subMessage:"Votre reflet numérique est maintenant visible",lastUpdateTime:r}),a.info("Avatar render ready - 100% complete",{serverScanId:e.serverScanId,step:"avatar",progress:100,timestamp:new Date().toISOString()})},setServerScanId:e=>{s(),t({serverScanId:e}),a.info("Server scan ID set",{serverScanId:e,timestamp:new Date().toISOString()})},setProgressMessage:(e,r)=>{t({message:e,subMessage:r||"",lastUpdateTime:Date.now()})},completeProgress:()=>{const e=s();s().setComplete(),a.info("Progress completed successfully",{serverScanId:e.serverScanId,finalStep:"celebration",timestamp:new Date().toISOString()})},maintainProgressForReview:()=>{const e=s(),r=Date.now();a.info("Maintaining progress for review",{serverScanId:e.serverScanId,currentProgress:e.overallProgress,currentStep:e.currentStep,timestamp:new Date().toISOString()});const n=e.steps.length>0?e.steps:[{id:"capture",title:"Capture Photographique",subtitle:"Photos de face et de profil capturées",icon:"Camera",color:"#8B5CF6"},{id:"processing",title:"Analyse IA Avancée",subtitle:"Intelligence artificielle appliquée",icon:"Scan",color:"#8B5CF6"},{id:"celebration",title:"Données Traitées",subtitle:"Préparation du rendu 3D",icon:"Check",color:"#8B5CF6"},{id:"avatar",title:"Avatar 3D",subtitle:"Votre reflet numérique",icon:"Eye",color:"#8B5CF6"}];t({overallProgress:95,phaseProgress:95,currentStep:"celebration",message:"Données Traitées",subMessage:"Préparation du rendu 3D...",lastUpdateTime:r,steps:n})},resetProgress:()=>{const e=s();s().stopDynamicProcessing(),a.info("Resetting progress",{serverScanId:e.serverScanId,timestamp:new Date().toISOString()}),t({isActive:!1,clientScanId:null,serverScanId:null,currentStep:"capture",overallProgress:0,phaseProgress:0,message:"",subMessage:"",steps:[],totalSteps:0,flowType:null,progressHistory:[],dynamicProgressIntervalId:null,dynamicProgressStepIndex:0,lastSoundThreshold:-1})},setProgressActive:e=>{const r=s();a.info("Setting progress active",{active:e,serverScanId:r.serverScanId,timestamp:new Date().toISOString()}),t({isActive:e})},startDynamicProcessing:(e,r)=>{const n=s();s().stopDynamicProcessing();const i=n.flowType==="face"?pt:ut;a.info("Starting dynamic processing progression",{startPercentage:e,endPercentage:r,flowType:n.flowType});const o=(r-e)/i.length,c=i[0];t({currentStep:"processing",overallProgress:e,phaseProgress:e,message:c.title,subMessage:c.subtitle,dynamicProgressStepIndex:0,lastUpdateTime:Date.now()}),s();const u=window.setInterval(()=>{const g=s().dynamicProgressStepIndex+1;if(g>=i.length){s().stopDynamicProcessing(),t({overallProgress:r,phaseProgress:r,message:"Analyse IA Terminée",subMessage:"Finalisation des données...",lastUpdateTime:Date.now()}),s(),a.info("Dynamic processing completed",{finalProgress:r});return}const d=i[g],S=Math.min(r,e+o*(g+1));t({overallProgress:S,phaseProgress:S,message:d.title,subMessage:d.subtitle,dynamicProgressStepIndex:g,lastUpdateTime:Date.now()}),s(),a.info("Dynamic processing step update",{stepIndex:g,stepTitle:d.title,progress:S})},3e3);t({dynamicProgressIntervalId:u}),s()},stopDynamicProcessing:()=>{const e=s();e.dynamicProgressIntervalId!==null&&(window.clearInterval(e.dynamicProgressIntervalId),a.info("Dynamic processing stopped",{lastStepIndex:e.dynamicProgressStepIndex}),t({dynamicProgressIntervalId:null,dynamicProgressStepIndex:0}),s())},setOverallProgress:(e,r,n)=>{const i=s();if(!i.isActive){a.warn("setOverallProgress called but progress not active",{percentage:e,message:r});return}if(i.dynamicProgressIntervalId!==null)return;const l=Number.isFinite(e)&&!Number.isNaN(e)?Math.max(0,Math.min(100,e)):0;if((!Number.isFinite(e)||Number.isNaN(e))&&a.warn("Invalid percentage passed to setOverallProgress, defaulting to 0",{percentageType:typeof e,safePercentage:l,message:r}),l<i.overallProgress){a.debug("REJECTED non-monotonic progress update",{message:r,reason:"progress_would_decrease"});return}const o=Math.floor(l/4);if(o>i.lastSoundThreshold&&l>0){try{typeof pe=="function"&&(pe(500,50),a.debug("Progress audio feedback played",{percentage:l,threshold:o,lastThreshold:i.lastSoundThreshold}))}catch(g){a.warn("Progress audio feedback failed",{error:g instanceof Error?g.message:String(g),percentage:l})}t({lastSoundThreshold:o})}const c=Date.now(),u={step:"custom",progress:l,timestamp:c},p=[...i.progressHistory,u].slice(-20);t({overallProgress:l,phaseProgress:l,message:r||i.message,subMessage:n||i.subMessage,lastUpdateTime:c,progressHistory:p}),a.info(`Overall progress: ${l}%`,{message:r,subMessage:n,timestamp:new Date().toISOString()})},incrementProgress:(e,r,n)=>{const i=s();if(!i.isActive){a.warn("incrementProgress called but progress not active",{increment:e,message:r});return}const l=Math.min(100,i.overallProgress+e);s().setOverallProgress(l,r||i.message,n||i.subMessage)}}));export{kt as D,w as F,Ct as N,At as Z,le as a,bt as b,Et as c,R as d,ze as e,Tt as f,ht as g,Pt as h,Se as i,wt as j,Ot as k,vt as l,Dt as m,Rt as n,Nt as o,Lt as p,Ft as q,Mt as r,Ut as s,yt as u};
